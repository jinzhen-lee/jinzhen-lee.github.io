<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>机巧少女臻臻</title>
  
  <subtitle>相信一切都是最好的安排</subtitle>
  <link href="https://jinzhen-lee.github.io/atom.xml" rel="self"/>
  
  <link href="https://jinzhen-lee.github.io/"/>
  <updated>2021-08-25T17:19:50.572Z</updated>
  <id>https://jinzhen-lee.github.io/</id>
  
  <author>
    <name>jinzhen-lee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一篇发布了的话就代表我终于换电脑搭建成功的文章</title>
    <link href="https://jinzhen-lee.github.io/2021/08/24/20210824/"/>
    <id>https://jinzhen-lee.github.io/2021/08/24/20210824/</id>
    <published>2021-08-24T14:32:38.000Z</published>
    <updated>2021-08-25T17:19:50.572Z</updated>
    
    <content type="html"><![CDATA[<p>距离上一次写博客已经过去了有半个月多的时间……换了新的笔记本费了一番力气才把全部配置挪过来，而且也不知道有没有弄好(泪)</p><p>昨天试了一下hexo是可以新建博文的，就比如我写的这篇，但是不知道能不能发布，所以就把最近的学习先一点点放上来吧。</p><p>这半个月隔离在家，学完了Java核心基础上的内容，接下来就是中和下了……路漫漫其修远兮。</p><p>今天的从8学到26面试题的内容，待会儿再做几道练习就可以了。今天学的东西比较多，慢慢总结一下~</p><span id="more"></span><p>显示做了几个关于多态性的练习，然后讲了Object类的内容和方法，然后是Object里面比较常用的方法<code>equals()</code>和<code>toString()</code>方法的重写，这两个应该算重点。</p><p>接下来比较了一下==运算和equals()，然后小小的接触了一下包装类，比较苦恼的是我看的版本是JDK8版本的，而JDK9里面做了很多关于integer包装类的改动，比如new一个integer的类就有点完全不知道怎么写了……还需要多找教程和资料😢</p><p>哦对了，还有一些JUnit的学习，后面关于包装类的测试都是用JUnit进行测试的</p><p>接下来放点学习的代码~</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jinzhen.study;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 面试题： == 和 equals()的区别</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 一、==的使用</span></span><br><span class="line"><span class="comment"> * ==是一个运算符</span></span><br><span class="line"><span class="comment"> * 1.使用在基本数据类型变量和引用数据类型变量中，比较两个数值相同</span></span><br><span class="line"><span class="comment"> * 2.如果比较的是基本数据类型变量，比较两个变量保存的数据是否相等（不一定类型要相同）</span></span><br><span class="line"><span class="comment"> * 补充： ==符号使用时，必须保证符号左右两边的变量类型一致</span></span><br><span class="line"><span class="comment"> * 3.如果比较的是引用数据类型变量，比较两个变量的地址值是否相同,即两个引用是否指向同一个对象实体</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 二、equals()方法</span></span><br><span class="line"><span class="comment"> * 1.这是一个方法，而不是运算符</span></span><br><span class="line"><span class="comment"> * 2.只能适用于引用数据类型</span></span><br><span class="line"><span class="comment"> * 3.Object中定义equals():</span></span><br><span class="line"><span class="comment"> * public boolean equals(Object obj){</span></span><br><span class="line"><span class="comment"> * return (this == obj);</span></span><br><span class="line"><span class="comment"> * }</span></span><br><span class="line"><span class="comment"> * Object中定义的equals()方法和==的作用是相同的，比较</span></span><br><span class="line"><span class="comment"> * 两个变量的地址值是否相同,即两个引用是否指向同一个对象实体</span></span><br><span class="line"><span class="comment"> * 4.像String、Date、File、包装类等都重写了Object类中的equals()方法，</span></span><br><span class="line"><span class="comment"> * 比较的不是两个引用地址是否相同，而是比较两个对象的“实体内容”是否相同</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 5.自定义类如何去重写equals()方法</span></span><br><span class="line"><span class="comment"> * 通常情况下，自定义类如果使用equals()的话，也通常是比较两个对象的实体内容是否相同</span></span><br><span class="line"><span class="comment"> * 那么需要对Object类中的方法进行重写,比较两个对象的实体内容(即name、age)是否相同</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EqualsTest</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">double</span> d = <span class="number">10.0</span>;</span><br><span class="line">System.out.println(i == j);<span class="comment">//true</span></span><br><span class="line">System.out.println(i == d);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c = <span class="number">10</span>;</span><br><span class="line">System.out.println(i == c);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c1 = <span class="string">'A'</span>;</span><br><span class="line"><span class="keyword">char</span> c2 = <span class="number">65</span>;</span><br><span class="line">System.out.println(c1 == c2);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"************************"</span>);</span><br><span class="line">Date date1 = <span class="keyword">new</span> Date(<span class="number">2577446L</span>);</span><br><span class="line">Date date2 = <span class="keyword">new</span> Date(<span class="number">2577446L</span>);</span><br><span class="line">System.out.println(date1 == date2);<span class="comment">//false</span></span><br><span class="line">System.out.println(date1.equals(date2));<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">Customer cust1 = <span class="keyword">new</span> Customer(<span class="string">"Tom"</span>, <span class="number">21</span>);</span><br><span class="line">Customer cust2 = <span class="keyword">new</span> Customer(<span class="string">"Tom"</span>, <span class="number">21</span>);</span><br><span class="line">System.out.println(cust1 == cust2);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="string">"*******重写后equals()方法测试*****************"</span>);</span><br><span class="line">System.out.println(cust1.equals(cust2));<span class="comment">//true</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>需要掌握equals()方法的重写，虽然在开发中不用自己手写（因为有瑕疵，直接Alt+shift+s调用即可），但是要理解原理</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//重写一个判断圆半径和颜色相等的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span> == obj){</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(obj <span class="keyword">instanceof</span> Circle){</span><br><span class="line">        Circle c1 = (Circle)obj;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.radius == c1.radius &amp;&amp; <span class="keyword">this</span>.getColor().equals(c1.getColor());</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//Java调用</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == obj)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (obj == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (getClass() != obj.getClass())</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    Circle other = (Circle) obj;</span><br><span class="line">    <span class="keyword">return</span> Double.doubleToLongBits(radius) == Double.doubleToLongBits(other.radius);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//toString的重写</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"the radius is:"</span> + radius;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>一些关于<code>toString()</code>内容的补充</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jinzhen.study;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Object类中oString()的使用</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 1.当我们输出一个对象的引用时，实际上就是调用当前对象的toString方法</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 2.Object类中toString的定义：</span></span><br><span class="line"><span class="comment"> * public String toString() {</span></span><br><span class="line"><span class="comment">        return getClass().getName() + "@" + Integer.toHexString(hashCode());</span></span><br><span class="line"><span class="comment">    }</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 3.像String、Date、File、包装类都重写了Object类中的toString()方法</span></span><br><span class="line"><span class="comment"> * 使得在调用对象的toString方法时，返回“实体内容”的信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 4.自定义类如果重写toString方法，当调用此方法时，返回实体内容</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ToStringTest</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Customer cust1 = <span class="keyword">new</span> Customer(<span class="string">"Tome"</span>,<span class="number">23</span>);</span><br><span class="line">System.out.println(cust1.toString());<span class="comment">//jinzhen.study.Customer@7de26db8 --&gt; [重写之后]Customer[name = Tome, age = 23]</span></span><br><span class="line">System.out.println(cust1);<span class="comment">//jinzhen.study.Customer@7de26db8</span></span><br><span class="line"></span><br><span class="line">String str = <span class="keyword">new</span> String (<span class="string">"MM"</span>);</span><br><span class="line">System.out.println(str);<span class="comment">//MM</span></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>接下来是超级方便的JUnit单元测试，可以对单个的方法进行调试，需要先在工程上右键–&gt;build path–&gt;add libraries–&gt;选择JUnit–&gt;默认为JUnit5，选择</p><p>然后创建一个Java类，声明单元测试方法，需要在方法上声明注解：@Test，注意，这一步需要导包<code>org.junit.Test</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> java2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * java中的JUnit单元测试</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 步骤：</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 1.选中当前工程点右键--&gt;build path--&gt;add libraries--&gt;</span></span><br><span class="line"><span class="comment"> * 选择JUnit--&gt;默认为JUnit5，选择即可</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 2.创建一个Java类，进行单元测试</span></span><br><span class="line"><span class="comment"> * 此时的Java类要求：</span></span><br><span class="line"><span class="comment"> * ①此类是公共的</span></span><br><span class="line"><span class="comment"> * ②这个类要提供公共的无参的构造器</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 3.再此类中声明单元测试方法</span></span><br><span class="line"><span class="comment"> * 此时的单元测试方法：</span></span><br><span class="line"><span class="comment"> * ①方法的权限是public，没有返回值类型(void)，没有形参</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 4.此单元测试方法上，需要声明一个注解：@Test,并在单元测试中导入org.junit.Test</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 5.声明好单元测试方法以后，就可以在方法体内测试相关的代码</span></span><br><span class="line"><span class="comment"> * 6.写完代码后，双击方法名，右键run as --&gt; JUnit Test</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 说明:</span></span><br><span class="line"><span class="comment"> * 1.如果执行结果没有任何异常，绿条</span></span><br><span class="line"><span class="comment"> * 2.如果执行结果出现异常，红条</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JUnitTest</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> number = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testEquals</span><span class="params">()</span> </span>{</span><br><span class="line">String s1 = <span class="string">"FD"</span>;</span><br><span class="line">String s2 = <span class="string">"ds"</span>;</span><br><span class="line">System.out.println(s1.equals(s2));</span><br><span class="line"></span><br><span class="line">System.out.println(number);</span><br><span class="line">show();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"show()..."</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>然后看看能不能发布……</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;距离上一次写博客已经过去了有半个月多的时间……换了新的笔记本费了一番力气才把全部配置挪过来，而且也不知道有没有弄好(泪)&lt;/p&gt;
&lt;p&gt;昨天试了一下hexo是可以新建博文的，就比如我写的这篇，但是不知道能不能发布，所以就把最近的学习先一点点放上来吧。&lt;/p&gt;
&lt;p&gt;这半个月隔离在家，学完了Java核心基础上的内容，接下来就是中和下了……路漫漫其修远兮。&lt;/p&gt;
&lt;p&gt;今天的从8学到26面试题的内容，待会儿再做几道练习就可以了。今天学的东西比较多，慢慢总结一下~&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="碎碎念" scheme="https://jinzhen-lee.github.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    <category term="多态性" scheme="https://jinzhen-lee.github.io/tags/%E5%A4%9A%E6%80%81%E6%80%A7/"/>
    
    <category term="Java基础上完结" scheme="https://jinzhen-lee.github.io/tags/Java%E5%9F%BA%E7%A1%80%E4%B8%8A%E5%AE%8C%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo搭建博客框架+部署到GitHub过程中踩的坑</title>
    <link href="https://jinzhen-lee.github.io/2021/08/24/hello-world/"/>
    <id>https://jinzhen-lee.github.io/2021/08/24/hello-world/</id>
    <published>2021-08-24T13:48:22.863Z</published>
    <updated>2021-07-27T06:17:43.158Z</updated>
    
    <content type="html"><![CDATA[<p>本纯零基础小白跟着B站UP@CodeSheep搭建博客过程中踩的各种坑……因为是毫无基础的小白+UP主演示的是Mac版本的搭建，所以费了不少功夫终于搭建成功，这里记录一下那些不大不小的坑~</p><span id="more"></span><p>一、搭建+部署过程</p><p>整个的搭建，外加部署到GitHub的全部过程，是使用以下两个教程的</p><p><a href="https://www.mintimate.cn/2020/03/19/hexo/#%E8%AE%BF%E9%97%AE%E5%8D%9A%E5%AE%A2">个人博客搭建–Hexo架设 - Mintimate’s Blog</a></p><p>然后很多资料下载是从这个博客搞到的（感恩！）：</p><p><a href="https://ihcll.cn/a002/">Hexo新手免费搭建博客视频教程 – 火车啦啦 (ihcll.cn)</a></p><p>从这里下载的VSC很快，如果从官网下真的太慢太慢了……可以做到一小时几个kb还下载失败×n</p><p>1.第一坑——_config.yml文件配置问题</p><p>跟着上面的步骤稳稳当当到了文件配置这里的时候，我就开始往下掉了，配置文件主要是以下内容：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/Demo/Demo.github.io</span><br><span class="line">  branch: main</span><br></pre></td></tr></tbody></table></figure><p>有的网站教程的branch写着master，但是我从GitHub上查看默认的是main，不知道的小伙伴可以自己去看看再确认是哪个，在这里：</p><p><img src="https://i.loli.net/2021/07/15/cmuzkWFwjytGZ3H.png" alt="image-20210715090226218"></p><p>然！后！就开始华丽的摔倒了！摔倒原因是：上面代码的冒号后，没有空一格！</p><p>所以虽然改完没什么问题，但是会在后面进行不下去其他操作Q Q，大家一定要记得冒号后面空一格……</p><p>2.第二坑——部署到GitHub上时无法跳转登录</p><p>上面repo的链接是打开GitHub–Code–HTTPS里面的链接，不是旁边那个！！（跑错链接重新又搞了一遍……泪）</p><p>然后在进行hexo目录下命令行窗口输入</p><figure class="highlight ebnf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></tbody></table></figure><p>的时候，此时如果前面一切正常，应该跳转登录GitHub才对！但是不知道前面哪里出了问题他一直提示我不对：failed to push some refs to @Administrator blabla什么的太长了没记住，总之就是用户名有问题</p><p>这个时候就用之前在GitHub注册时候的名字和邮箱写一下这两行代码：</p><figure class="highlight autoit"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">"你的电子邮箱地址"</span></span><br><span class="line"><span class="meta">#然后回车</span></span><br><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">"你的GitHub和hexo连接的用户名"</span></span><br><span class="line"><span class="meta">#再次回车</span></span><br></pre></td></tr></tbody></table></figure><p>然后就解决了！</p><p>以上！今天啥也没干就搭建了一个空架子网页……接下来还有好多要学的东西，任重而道远~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本纯零基础小白跟着B站UP@CodeSheep搭建博客过程中踩的各种坑……因为是毫无基础的小白+UP主演示的是Mac版本的搭建，所以费了不少功夫终于搭建成功，这里记录一下那些不大不小的坑~&lt;/p&gt;</summary>
    
    
    
    <category term="博客搭建" scheme="https://jinzhen-lee.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="-博客搭建" scheme="https://jinzhen-lee.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>走进面向对象学习~</title>
    <link href="https://jinzhen-lee.github.io/2021/08/06/20210806/"/>
    <id>https://jinzhen-lee.github.io/2021/08/06/20210806/</id>
    <published>2021-08-06T01:31:55.000Z</published>
    <updated>2021-08-07T09:27:27.708Z</updated>
    
    <content type="html"><![CDATA[<p>昨天创建的文章，今天才开始动笔😂</p><p>本来以为一天听不完十节课，结果在上午磨蹭还刷了会儿绘旅人手书的情况下居然还是看完了！</p><p>所以果然还是，潜力无穷~</p><p>昨天做了好多练习，今天要巩固一下！</p><span id="more"></span><h4 id="总结一下昨日学习"><a href="#总结一下昨日学习" class="headerlink" title="总结一下昨日学习"></a>总结一下昨日学习</h4><p>昨天学习了十大排序方式，复习了杨辉三角的编写，学习了冒泡排序的编程算法，以及快速排序的思想：找到一个基础值和高点低点，与基础值进行比较然后交换位置，需要掌握的是冒泡排序的时间复杂度是O(n^2)，快速排序的是O(nlog2n)[是以二为底n的对数！]</p><p>另外学习了五种Arrays的工具！可以方便有效的对数组进行一些操作了</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.boolean equals(int arr[],int arr1[])——判断两个数组是否相等</span></span><br><span class="line"><span class="keyword">int</span> [] arr1 = <span class="keyword">new</span> <span class="keyword">int</span> [] {<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>};</span><br><span class="line"><span class="keyword">int</span> [] arr2 = <span class="keyword">new</span> <span class="keyword">int</span> [] {<span class="number">1</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">3</span>};</span><br><span class="line"><span class="keyword">boolean</span> isEquals = Arrays.equals(arr1, arr2);</span><br><span class="line">System.out.println(isEquals);</span><br><span class="line"><span class="comment">//2.Arrays.StringtoString(int [] arr)——遍历数组</span></span><br><span class="line">System.out.print(Arrays.toString(arr1));</span><br><span class="line"><span class="comment">//3.void sort(int [] arr)——对数组排序</span></span><br><span class="line">        Arrays.sort(<span class="keyword">int</span> [] arr);</span><br><span class="line">        System.out.print(Arrays.toString(arr));</span><br><span class="line"><span class="comment">//4.void fill(int [] arr,int val)——用一个内容对数组进行填充</span></span><br><span class="line">Arrays.fill(arr1,<span class="number">15</span>);</span><br><span class="line">System.out.print(Arrays.toString(arr1));</span><br><span class="line"><span class="comment">//5.int binarySearch(int [] arr,int key)——对排序后的数组用二分法查找某个数</span></span><br><span class="line"><span class="keyword">int</span> arr2 [] = <span class="keyword">new</span> <span class="keyword">int</span> [] {<span class="number">1</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">24</span>,<span class="number">36</span>,<span class="number">97</span>};</span><br><span class="line"><span class="keyword">int</span> index = Arrays.binarySearch(<span class="keyword">int</span> arr2,<span class="number">36</span>);</span><br><span class="line"><span class="keyword">if</span> (index &gt; <span class="number">0</span> ){</span><br><span class="line">        System.out.print(<span class="string">"您所查找的内容在："</span> + index);</span><br><span class="line">    }<span class="keyword">else</span></span><br><span class="line">    {System.out.print(<span class="string">"很遗憾，没有找到！"</span>);}</span><br></pre></td></tr></tbody></table></figure><p>尤其是遍历！再也不用一遍又一遍的写for循环啦（没有说for循环不好的意思🌝</p><p>​                                                    ——🎉🎉🎉✨✨✨——</p><p>然后是一点点面向对象的<strong>概念性内容</strong></p><p><strong>Java类及类的成员：</strong>属性、方法、构造器；代码块，内部类</p><p><strong>面向对象的三大特征：</strong>封装性、继承性、多态性（还有一个可能被问到的：抽象性）</p><p><strong>其它关键字：</strong><code>this</code> <code>super</code> <code>final</code> <code>abstract</code> <code>interface</code> <code>package</code> <code>import</code></p><p><strong>面向过程和面向对象的一些区别：</strong></p><p>面向过程：强调功能性为，函数为最小单位，考虑怎么做</p><p>面向对象：强调了具备功能的对象，以类和对象为最小单位，考虑谁来做</p><p><strong>类和对象的范围和定义：</strong></p><p>类：对一类事物的描述，抽象的、概念上的定义</p><p>对象：事实及存在的该类事物的每个个体，因而也称为实例</p><p>​                                                    ——🎉🎉🎉✨✨✨——</p><p>进入今天的学习~</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 一、设计类，其实就是设计类的成员</span></span><br><span class="line"><span class="comment"> * 属性 = 成员变量 = filed = 域、字段</span></span><br><span class="line"><span class="comment"> * 方法 = 成员方法 = 函数 = method</span></span><br><span class="line"><span class="comment"> * 创建一个对象 = 类的实例化 = 实例化类</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 二、类和对象的使用（面向对象思想落地的实现）</span></span><br><span class="line"><span class="comment"> * 1.创建类，设计类的成员（属性、方法）</span></span><br><span class="line"><span class="comment"> * 2.创建类的对象</span></span><br><span class="line"><span class="comment"> * 3.通过【对象.属性】或【对象.方法】调用对象的结构</span></span><br><span class="line"><span class="comment"> *  三、如果创建了一个类的多个对象，每个对象都独立的拥有一套类的属性（非static）</span></span><br><span class="line"><span class="comment"> * 意味着，如果修改一个对象的属性A，不影响另外一个对象属性A的值</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonTest</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="comment">//创建Person类的对象</span></span><br><span class="line">Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="comment">//创建完后，就能调用对象的结构：属性、方法</span></span><br><span class="line"><span class="comment">//调用属性：“对象.属性”</span></span><br><span class="line">p1.name = <span class="string">"Tom"</span>;<span class="comment">//赋值</span></span><br><span class="line">p1.isFemale = <span class="keyword">false</span>;</span><br><span class="line">System.out.println(p1.name);<span class="comment">//调用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调用方法：“对象.方法”</span></span><br><span class="line">p1.eat();</span><br><span class="line">p1.sleep();</span><br><span class="line">p1.talk(<span class="string">"Chinese"</span>);</span><br><span class="line">        <span class="comment">//************************</span></span><br><span class="line">Person p2 = <span class="keyword">new</span> Person();</span><br><span class="line">System.out.println(p2.name);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将p1变量保存的对象地址值赋给p3，导致p1和p3指向了对空间同一个对象实体</span></span><br><span class="line">Person p3 = p1;</span><br><span class="line">System.out.println(p3.name);</span><br><span class="line"></span><br><span class="line">p3.age = <span class="number">10</span>;</span><br><span class="line">System.out.println(p1.age);<span class="comment">//输出10</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//属性</span></span><br><span class="line">String name ;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">boolean</span> isFemale;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"人可以吃饭"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"人会睡觉"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">talk</span><span class="params">(String language)</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"人会说话，使用的是:"</span> + language);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://i.loli.net/2021/08/07/qElMtBDI6Zjs71v.png" alt="image-20210807150842197"></p><h4 id="在类中属性的使用"><a href="#在类中属性的使用" class="headerlink" title="在类中属性的使用"></a>在类中属性的使用</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 类中属性的使用</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* 属性（成员变量） VS 局部变量</span></span><br><span class="line"><span class="comment">* 1.相同点</span></span><br><span class="line"><span class="comment">* 1.1定义变量的格式是一样的：数据类型 变量名 = 变量值；</span></span><br><span class="line"><span class="comment">* 1.2先声明后使用</span></span><br><span class="line"><span class="comment">* 1.3都有其对应的作用域</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* 2.不同点</span></span><br><span class="line"><span class="comment">* 2.1在类中声明的位置不同</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* 属性：直接定义在类的一对{}内</span></span><br><span class="line"><span class="comment">* 局部变量：声明在方法内、方法形参、代码块内、构造器形参、构造器内部的变量</span></span><br><span class="line"><span class="comment">* 2.2关于权限修饰符的不同</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* 属性：可以在声明属性时，指名其权限，使用权限修饰符</span></span><br><span class="line"><span class="comment">* 常用的权限修饰符：private,public,缺省,protected ---&gt;封装性</span></span><br><span class="line"><span class="comment">* 目前，都是使用缺省</span></span><br><span class="line"><span class="comment">* 局部变量：不可以使用权限修饰符</span></span><br><span class="line"><span class="comment">* 2.3默认初始化值</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* 属性：有默认初始化值</span></span><br><span class="line"><span class="comment">* 和一维数组元素的初始化值相同</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* 局部变量：没有默认初始化值</span></span><br><span class="line"><span class="comment">* 我们再调用局部变量之前，一定要显式赋值</span></span><br><span class="line"><span class="comment">* 特别的，形参在调用时，赋值即可</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* 2.4在内存中加载的位置不同</span></span><br><span class="line"><span class="comment">* 属性：加载到堆空间中（非static）</span></span><br><span class="line"><span class="comment">* 局部变量：加载到栈空间</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure><p>今天的干货干的我头皮发麻……内容也多到我头皮发麻……</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jinzhen.study;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 类中方法的声明和使用</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 方法：描述类应该具有的功能</span></span><br><span class="line"><span class="comment"> * 比如，Math类：sqrt()\random()</span></span><br><span class="line"><span class="comment"> * Scanner:nextXnn()</span></span><br><span class="line"><span class="comment"> * Arrays:sort()\binarySearc()\toString\equals()...</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 1.举例</span></span><br><span class="line"><span class="comment"> * public void eat() {}//带void没有返回值</span></span><br><span class="line"><span class="comment"> * public void sleep(int hour) {}</span></span><br><span class="line"><span class="comment"> * public String getName() {}//返回字符串</span></span><br><span class="line"><span class="comment"> * public String  getNation(String nation) {}</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 2.方法的声明：权限修饰符 返回值类型 方法名（形参列表）{</span></span><br><span class="line"><span class="comment"> * 方法体</span></span><br><span class="line"><span class="comment"> * }</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 注意：static final abstract 来修饰的方法，后面再讲！！</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 3.权限修饰符</span></span><br><span class="line"><span class="comment"> * 3.1 关于权限修饰符，默认方法的权限修饰符先都使用public</span></span><br><span class="line"><span class="comment"> * Java规定的四种权限修饰符：private public protected 缺省</span></span><br><span class="line"><span class="comment"> * 3.2 返回值类型</span></span><br><span class="line"><span class="comment"> * 3.2.1如果方法有返回值，则必须在方法声明时指定返回值的类型，同时方法中</span></span><br><span class="line"><span class="comment"> * 需要使用return关键字来返回指定类型的变量或者常量</span></span><br><span class="line"><span class="comment"> * 如果方法没有返回值，则方法声明时，使用void来表示</span></span><br><span class="line"><span class="comment"> * 注：return后不可声明表达式！！</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 3.2.2定义方法该不该有返回值？</span></span><br><span class="line"><span class="comment"> * ①先看要求，如果里面有返回则写</span></span><br><span class="line"><span class="comment"> * ②凭经验，具体问题具体分析</span></span><br><span class="line"><span class="comment"> * 3.3 方法名：属于标识符，遵循标识符的规范和规则 “见名知意”</span></span><br><span class="line"><span class="comment"> * 3.4 形参列表：方法可以声明0个，1个，多个形参，</span></span><br><span class="line"><span class="comment"> * 3.4.1 格式：数据类型1 形参1,数据类型2 形参2,...</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 3.4.2 定义方法时要不要形参？</span></span><br><span class="line"><span class="comment"> * ①看要求；</span></span><br><span class="line"><span class="comment"> * ②凭经验，具体问题具体分析</span></span><br><span class="line"><span class="comment"> * 3.5 方法体：方法功能的体现</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 4.return关键字的使用</span></span><br><span class="line"><span class="comment"> *  1.使用范围：使用在方法体中</span></span><br><span class="line"><span class="comment"> *   2.作用： ①结束一个方法</span></span><br><span class="line"><span class="comment"> *  ②针对于有返回值类型的方法，使用"return 数据"来返回所要的数据</span></span><br><span class="line"><span class="comment"> *   3.注意点：return关键字后面不可以声明执行语句</span></span><br><span class="line"><span class="comment"> *  </span></span><br><span class="line"><span class="comment"> * 5.方法的使用</span></span><br><span class="line"><span class="comment"> * 方法的使用中，可以调用当前类的属性或方法</span></span><br><span class="line"><span class="comment"> * 方法A中又调用了方法A---&gt;递归方法</span></span><br><span class="line"><span class="comment"> * 不能在方法中又定义一个方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerTest</span> </span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span></span>{</span><br><span class="line"></span><br><span class="line">String name;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">boolean</span> isFemale;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"eat with customers"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">(<span class="keyword">int</span> hour)</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"you've slept for "</span> + hour + <span class="string">"hours"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String  <span class="title">getNation</span><span class="params">(String nation)</span> </span>{</span><br><span class="line">String  info = <span class="string">"My nation is "</span> + nation;</span><br><span class="line"><span class="keyword">return</span> info;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>好好消化一下……然后明天做点练习~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;昨天创建的文章，今天才开始动笔😂&lt;/p&gt;
&lt;p&gt;本来以为一天听不完十节课，结果在上午磨蹭还刷了会儿绘旅人手书的情况下居然还是看完了！&lt;/p&gt;
&lt;p&gt;所以果然还是，潜力无穷~&lt;/p&gt;
&lt;p&gt;昨天做了好多练习，今天要巩固一下！&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="面向对象" scheme="https://jinzhen-lee.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>日常学习内容以及网页被百度+必应收录方法【hexo202106之后版本】</title>
    <link href="https://jinzhen-lee.github.io/2021/08/04/20210804/"/>
    <id>https://jinzhen-lee.github.io/2021/08/04/20210804/</id>
    <published>2021-08-04T05:57:24.000Z</published>
    <updated>2021-08-05T09:54:32.432Z</updated>
    
    <content type="html"><![CDATA[<p>今天好倒霉……为什么手指缝还能被划流血，明明是那种故意去划都瞄不准的程度，结果居然随手一动就被划伤了😢</p><p>然后昨天打了第二针疫苗的胳膊现在还在痛，早上侧着躺压到了被痛醒😕</p><p>我恨，为什么要打在右胳膊上，明明第一针打的是左边！</p><p>今天早上来公司摸鱼了一点人体，今天都在做人体练习……要多练才有手感啊呜呜</p><p>加油子~！</p><span id="more"></span><p>今天二维数组学了好多东西~</p><p>发现用PPT记笔记比word顺滑，以后都切到PPT了🚬🚬</p><p>发点练习：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jinzhen.study.java;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 使用二维数组打印一个10行杨辉三角。</span></span><br><span class="line"><span class="comment"> * 1. 第一行有1 个元素, 第n 行有n 个元素 </span></span><br><span class="line"><span class="comment"> * 2. 每一行的第一个元素和最后一个元素都是1 </span></span><br><span class="line"><span class="comment"> * 3. 从第三行开始, 对于非第一个元素和最后一个元 素的元素。</span></span><br><span class="line"><span class="comment"> * 即：yanghui[i][j] = yanghui[i-1][j-1] + yanghui[i-1][j];</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">YangHuiTest</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="comment">//1.声明并初始化二维数组</span></span><br><span class="line"><span class="keyword">int</span> yangHui[][] = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">10</span>][]; </span><br><span class="line"><span class="comment">//2.给数组的元素赋值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; yangHui.length;i++) {</span><br><span class="line">yangHui[i] = <span class="keyword">new</span> <span class="keyword">int</span>[i + <span class="number">1</span>];</span><br><span class="line"><span class="comment">//2.1给首末元素赋值(需要放入循环)</span></span><br><span class="line">yangHui[i][<span class="number">0</span>] = yangHui[i][i] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//2.2给每行的非首末元素赋值</span></span><br><span class="line"><span class="keyword">if</span> (i &gt; <span class="number">1</span>) {</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j &lt; yangHui[i].length - <span class="number">1</span>;j++) {</span><br><span class="line">yangHui[i][j] = yangHui[i-<span class="number">1</span>][j-<span class="number">1</span>] + yangHui[i-<span class="number">1</span>][j];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//3.遍历二维数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; yangHui.length;i++) {</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; yangHui[i].length;j++) {</span><br><span class="line">System.out.print(yangHui[i][j] + <span class="string">"  "</span>);</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>摸鱼图就不放了，画的太烂🚬</p><p>今天从147学到了157，一天十节课，差不多十三天就把剩下的学完了，要是哪天听的多一点还能更快！</p><p>争取每天多学点，多听点，但是也不能步子太大扯到档(?)还是要巩固好</p><p>比如今天都学到二维数组了还在数组怎么赋值那里卡了一下……</p><p>好好巩固啊！</p><hr><p>然后今天继续昨天的笔记开始写……目前是两天写一篇，因为一天的内容有点少而且蛮杂乱的，第二天正好能整理顺便加点新内容，让一篇文章不至于太短😂</p><p>今天重新写了一遍杨辉三角，巩固理解；还有一道回形赋值的题下午研究一下（不知为何下午的学习兴趣比上午高…），现在早上做了两道简单的赋值题，计算10个数的两位数数组里面的最大值最小值平均数和总和。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> [] arr = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;arr.length;i++) {</span><br><span class="line">arr[i] = (<span class="keyword">int</span>)(Math.random() * <span class="number">90</span>) + <span class="number">10</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++) {</span><br><span class="line">System.out.print(arr[i] + <span class="string">","</span>);</span><br><span class="line">            <span class="comment">//没错这里的我就是这么龟毛……</span></span><br><span class="line"><span class="keyword">if</span> ( i == <span class="number">9</span>) {</span><br><span class="line">System.out.print(arr[i]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="comment">//求最大值、最小值、总和和平均数</span></span><br><span class="line"><span class="keyword">int</span> maxValue = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length;i++) {</span><br><span class="line"><span class="keyword">if</span>(maxValue &lt; arr[i]) {</span><br><span class="line">maxValue = arr[i];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"最大值是："</span> + maxValue);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> minValue = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length;i++) {</span><br><span class="line"><span class="keyword">if</span>(minValue &gt; arr[i]) {</span><br><span class="line">minValue = arr[i];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"最小值是："</span> + minValue);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length;i++) {</span><br><span class="line">sum +=arr[i];</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"总和是："</span> + sum);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> avgValue = sum / arr.length;</span><br><span class="line">System.out.println(<span class="string">"平均数是："</span> + avgValue);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>学一半跑去做了个百度+必应的认证……</p><p>实在是不想搞科学上网，就没有整谷歌的😶</p><p>用的是下面这个插件和方法：</p><p><a href="https://cjh0613.com/20200603HexoSubmitUrlsToSearchEngine.html">hexo-submit-urls-to-search-engine 中文文档 | 峡州仙士之页 (cjh0613.com)</a></p><p>但是百度真的很怪！如果不单独加一个他的内容就会报错！</p><p>所以修改站点配置文件如下：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">baidu_url_submit:</span><br><span class="line">  count: <span class="number">10</span>      ## 提交最新的<span class="number">10</span>个链接</span><br><span class="line">  host: https:<span class="operator">/</span><span class="operator">/</span>jinzhen<span class="operator">-</span>lee.github.io<span class="operator">/</span>     ## 百度站长平台中注册的域名</span><br><span class="line">  token: <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> ## 准入秘钥，需要在百度站长<span class="operator">-</span>链接提交<span class="operator">-</span>自动提交<span class="operator">-</span>主动推送（实时）中查看</span><br><span class="line">  path: baidu_urls.txt </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hexo_submit_urls_to_search_engine:</span><br><span class="line">  submit_condition: count #链接被提交的条件，可选值：count <span class="operator">|</span> <span class="keyword">period</span> 现仅支持count</span><br><span class="line">  count: <span class="number">10</span> # 提交最新的<span class="number">10</span>个链接</span><br><span class="line">  <span class="keyword">period</span>: <span class="number">900</span> # 提交修改时间在 <span class="number">900</span> 秒内的链接</span><br><span class="line">  google: <span class="number">0</span> # 是否向Google提交，可选值：<span class="number">1</span> <span class="operator">|</span> <span class="number">0</span>（<span class="number">0</span>：否；<span class="number">1</span>：是）</span><br><span class="line">  bing: <span class="number">1</span> # 是否向bing提交，可选值：<span class="number">1</span> <span class="operator">|</span> <span class="number">0</span>（<span class="number">0</span>：否；<span class="number">1</span>：是）</span><br><span class="line">  baidu: <span class="number">1</span> # 是否向baidu提交，可选值：<span class="number">1</span> <span class="operator">|</span> <span class="number">0</span>（<span class="number">0</span>：否；<span class="number">1</span>：是）</span><br><span class="line">  txt_path: submit_urls.txt ## 文本文档名， 需要推送的链接会保存在此文本文档里</span><br><span class="line">  baidu_host:  ## 在百度站长平台中注册的域名</span><br><span class="line">  baidu_token:  ## 请注意这是您的秘钥， 所以请不要把它直接发布在公众仓库里<span class="operator">!</span></span><br><span class="line">  bing_host:  ## 在bing站长平台中注册的域名</span><br><span class="line">  bing_token:  ## 请注意这是您的秘钥， 所以请不要把它直接发布在公众仓库里<span class="operator">!</span></span><br><span class="line">  #google_host: https:<span class="operator">/</span><span class="operator">/</span>cjh0613.github.io ##在google站长平台中注册的域名</span><br><span class="line">  #google_key_file: Project.json #存放google key的json文件，放于网站根目录（与hexo _config.yml文件位置相同），请不要把json文件内容直接发布在公众仓库里<span class="operator">!</span></span><br><span class="line">  #google_proxy: http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8080</span> # 向谷歌提交网址所使用的系统 http 代理，填 <span class="number">0</span> 不使用</span><br><span class="line">##因为不用Google所以我直接注释掉了</span><br><span class="line">  replace: <span class="number">0</span>  # 是否替换链接中的部分字符串，可选值：<span class="number">1</span> <span class="operator">|</span> <span class="number">0</span>（<span class="number">0</span>：否；<span class="number">1</span>：是）</span><br><span class="line">  find_what: https:<span class="operator">/</span><span class="operator">/</span>jinzhen<span class="operator">-</span>lee.github.io<span class="operator">/</span></span><br><span class="line">  replace_with: https:<span class="operator">/</span><span class="operator">/</span>jinzhen<span class="operator">-</span>lee.com</span><br></pre></td></tr></tbody></table></figure><p>再将站点文件里面的的deploy配置如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: https:<span class="comment">//github.com/jinzhen-lee/jinzhen-lee.github.io.git</span></span><br><span class="line">  branch: main</span><br><span class="line">- type: cjh_bing_url_submitter</span><br><span class="line">- type: cjh_baidu_url_submitter</span><br><span class="line"><span class="comment">//注意一定要加前面的小杠杠！！！前面的git也要加！不加就会报错！</span></span><br></pre></td></tr></tbody></table></figure><p>目前是已经提交到了两个网站上，没有出现异常：</p><p><img src="https://i.loli.net/2021/08/05/aRXoSHlAgZvxTMn.png" alt="image-20210805123231922"></p><p>就等48小时看看能不能被搜到啦~</p><p>午休时间到了，开始摸鱼画画！下午继续学习Java</p><p>下午学习了数组的赋值、复制、反转和搜索</p><p><img src="https://i.loli.net/2021/08/05/ieGd65JgywNTW1f.png" alt="image-20210805163705986"></p><p>代码如下~</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest1</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="comment">//复制</span></span><br><span class="line"><span class="keyword">int</span> [] arr1;</span><br><span class="line"><span class="keyword">int</span> arr2 [];</span><br><span class="line">arr1 = <span class="keyword">new</span> <span class="keyword">int</span> [] {<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>};</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr1.length;i++) {</span><br><span class="line">System.out.print(arr1[i] + <span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">arr2 = <span class="keyword">new</span> <span class="keyword">int</span> [arr1.length];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr2.length;i++) {</span><br><span class="line">arr2[i] = arr1[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr2.length;i++) {</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) {</span><br><span class="line">arr2[i] = i;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr1.length;i++) {</span><br><span class="line">System.out.print(arr1[i] + <span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">        <span class="comment">//赋值</span></span><br><span class="line">        <span class="keyword">int</span> [] arr1;</span><br><span class="line"><span class="keyword">int</span> arr2 [];</span><br><span class="line">arr1 = <span class="keyword">new</span> <span class="keyword">int</span> [] {<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>};</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr1.length;i++) {</span><br><span class="line">System.out.print(arr1[i] + <span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">arr2 = arr1;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr2.length;i++) {</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) {</span><br><span class="line">arr2[i] = i;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr1.length;i++) {</span><br><span class="line">System.out.print(arr1[i] + <span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">        <span class="comment">//反转</span></span><br><span class="line">        <span class="comment">//方法一：</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length / <span class="number">2</span>;i++) {</span><br><span class="line">String temp = arr[i];</span><br><span class="line">arr[i] = arr[arr.length - i - <span class="number">1</span>];</span><br><span class="line">arr[arr.length - i - <span class="number">1</span>] = temp;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++) {</span><br><span class="line">System.out.print(arr[i] + <span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="comment">//方法二：</span></span><br><span class="line"><span class="keyword">int</span> arr1 [] = <span class="keyword">new</span> <span class="keyword">int</span> [] {<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>};</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = arr1.length - <span class="number">1</span>;i &lt; j;i++,j--) {</span><br><span class="line"><span class="keyword">int</span> temp = arr1[i];</span><br><span class="line">arr1[i] = arr1[j];</span><br><span class="line">arr1[j] = temp;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr1.length;i++) {</span><br><span class="line">System.out.print(arr1[i] + <span class="string">"\t"</span>);</span><br><span class="line">}</span><br><span class="line">        <span class="comment">//搜索</span></span><br><span class="line">        <span class="comment">//线性查找：</span></span><br><span class="line">System.out.println();</span><br><span class="line">String dest = <span class="string">"fox"</span>;</span><br><span class="line"><span class="keyword">boolean</span> ifFound = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++) {</span><br><span class="line"><span class="keyword">if</span> (dest.equals(arr[i])) {</span><br><span class="line">System.out.print(<span class="string">"找到了指定元素，位置为："</span> + i);</span><br><span class="line">ifFound = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (ifFound) {</span><br><span class="line">System.out.println(<span class="string">"很遗憾，没有找到您想搜索的内容..."</span>);</span><br><span class="line">}</span><br><span class="line">        <span class="comment">//二分法</span></span><br><span class="line">        <span class="keyword">int</span> [] arr3 = <span class="keyword">new</span> <span class="keyword">int</span> [] {<span class="number">1</span>,<span class="number">6</span>,<span class="number">44</span>,<span class="number">88</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">120</span>,<span class="number">315</span>,<span class="number">456</span>};</span><br><span class="line"><span class="keyword">int</span> dest1 = <span class="number">97</span>;</span><br><span class="line"><span class="keyword">int</span> head = <span class="number">0</span>;<span class="comment">//初始的首索引</span></span><br><span class="line"><span class="keyword">int</span> end = arr3.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> isFound =<span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(head &lt;= end) {</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> middle = (head + end) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dest1 == arr3[middle]) {</span><br><span class="line">System.out.println(<span class="string">"找到了指定元素，索引位置为："</span> + middle);</span><br><span class="line">isFound = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (arr3[middle] &gt; dest1) {</span><br><span class="line">end = middle - <span class="number">1</span>;</span><br><span class="line">}<span class="keyword">else</span> {</span><br><span class="line">head = middle + <span class="number">1</span>;<span class="comment">//这个地方让我找了半小时的bug！！！！</span></span><br><span class="line">                <span class="comment">//别写成减号！！！！！！！！！！！</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (isFound) {</span><br><span class="line">System.out.println(<span class="string">"很遗憾，没有找到您想搜索的:"</span> + dest1);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>吐了呀，学到二分法的时候写了个bug（太懒复制粘贴没思考逻辑我先打自己两巴掌</p><p>然后疯狂死循环……电脑都卡成无响应了！！！</p><p>而且对着正确的代码愣是就没找到哪错了？？（我就是瞎</p><p>终于一行行算出来了。。。还行就是PPT的笔记也要卡死了。。。</p><p>待会儿再画点画今天的内容就结束……</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天好倒霉……为什么手指缝还能被划流血，明明是那种故意去划都瞄不准的程度，结果居然随手一动就被划伤了😢&lt;/p&gt;
&lt;p&gt;然后昨天打了第二针疫苗的胳膊现在还在痛，早上侧着躺压到了被痛醒😕&lt;/p&gt;
&lt;p&gt;我恨，为什么要打在右胳膊上，明明第一针打的是左边！&lt;/p&gt;
&lt;p&gt;今天早上来公司摸鱼了一点人体，今天都在做人体练习……要多练才有手感啊呜呜&lt;/p&gt;
&lt;p&gt;加油子~！&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="数组" scheme="https://jinzhen-lee.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="SAI2板绘" scheme="https://jinzhen-lee.github.io/tags/SAI2%E6%9D%BF%E7%BB%98/"/>
    
    <category term="网站收录" scheme="https://jinzhen-lee.github.io/tags/%E7%BD%91%E7%AB%99%E6%94%B6%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>一点碎碎念+学习的内容</title>
    <link href="https://jinzhen-lee.github.io/2021/08/02/20210802-2/"/>
    <id>https://jinzhen-lee.github.io/2021/08/02/20210802-2/</id>
    <published>2021-08-02T08:23:15.000Z</published>
    <updated>2021-08-03T09:48:11.103Z</updated>
    
    <content type="html"><![CDATA[<p>开始今天的学习之前碎碎念一点点……关于最近的学习情况</p><p>工作相关的进展就是马上要去实验室那边，到时候不知道是怎么样的工作模式，总之电脑里面的东西，随时备份！</p><p>然后抓紧时间在学Java和画画，还要兼顾着一些ps的学习，总觉得很多学习内容没有输出的话很苍白😶对于未来的工作方向，很好奇，是所有人都很迷茫，还是只有我如此呢？😔</p><p>很多时候学习都会恍惚那么一瞬，开始思考为什么要学，学了有什么用，就算学能不能成功转行，转行了自己能做什么……问题太多而答案太少，索性就不去想这些东西，只专注的做好眼前的事情罢了，似乎有一些鼠目寸光？但是不做好眼前的事情，无意义的内耗更浪费吧😢</p><p>认真工作，努力生活，如果一天下来是有所收获，那么也不算辜负啦。</p><span id="more"></span><p>昨天下班了摸鱼一张，今天早上早早来摸鱼一张~努力学习，认真摸鱼！💪</p><p>Java的学习课程也终于要和editplus说再见了，安装了eclipse，开始进入新阶段的学习~</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*今天的学习内容</span></span><br><span class="line"><span class="comment"> * 一、数组的概述</span></span><br><span class="line"><span class="comment"> * 1.数组的理解</span></span><br><span class="line"><span class="comment"> * 数组(Array)，是多个相同类型数据按一定顺序排列</span></span><br><span class="line"><span class="comment"> *的集合，并使用一个名字命名，并通过编号的方式</span></span><br><span class="line"><span class="comment"> *对这些数据进行统一管理。</span></span><br><span class="line"><span class="comment"> * 2.数组相关的概念</span></span><br><span class="line"><span class="comment"> * 〉数组名</span></span><br><span class="line"><span class="comment"> * 〉元素</span></span><br><span class="line"><span class="comment"> * 〉角标、下标、索引</span></span><br><span class="line"><span class="comment"> * 〉长度（元素的个数）</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 3.特点：数组是有序对应的</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 4.数组属于引用类型变量，数组的元素可以是基本数据类型也可以是引用类型.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 5.一维数组的使用</span></span><br><span class="line"><span class="comment"> * ①一维数组的声明和初始化</span></span><br><span class="line"><span class="comment"> * ②如何调用数组的指定位置的元素</span></span><br><span class="line"><span class="comment"> * ③如何获取数组的长度</span></span><br><span class="line"><span class="comment"> * ④如何遍历数组</span></span><br><span class="line"><span class="comment"> * ⑤数组元素的默认初始化值</span></span><br><span class="line"><span class="comment"> * ⑥数组的内存解析</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></tbody></table></figure><p>今天主要学习的是一维数组，包括一些JVM中一维数组的储存等，果然JVM就是在后面的学习内容！之前看了一大堆老师几句话讲完了……谢特！（看的还不如那几句话讲得清楚😅</p><p>上午学了基础，下午去打了疫苗，然后听完JVM做了点题……下面是在word里面写的草稿流</p><p><img src="https://i.loli.net/2021/08/03/PZvqONKEIW1rDGw.png" alt="image-20210803174614659"></p><p>然后加一道练习题</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jinzhen.study.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">从键盘读入学生成绩，找出最高分， 并输出学生成绩等级。</span></span><br><span class="line"><span class="comment">成绩&gt;=最高分-10    等级为’A’</span></span><br><span class="line"><span class="comment">成绩&gt;=最高分-20    等级为’B’</span></span><br><span class="line"><span class="comment">成绩&gt;=最高分-30    等级为’C’</span></span><br><span class="line"><span class="comment">其余 等级为’D’ </span></span><br><span class="line"><span class="comment">提示：先读入学生人数，根据人数创建int数组， 存放学生成绩。 </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo1</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[]args)</span></span>{</span><br><span class="line"><span class="comment">//使用Scanner读取学生个数</span></span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入学生人数："</span>);</span><br><span class="line"><span class="keyword">int</span> stuNumber = scan.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建数组，存储学生成绩，动态初始化</span></span><br><span class="line"><span class="keyword">int</span> scores[] = <span class="keyword">new</span> <span class="keyword">int</span> [stuNumber];</span><br><span class="line"><span class="comment">//给数组中的元素赋值</span></span><br><span class="line"><span class="keyword">int</span> maxScore = <span class="number">0</span>;</span><br><span class="line">System.out.println(<span class="string">"请输入"</span> + stuNumber + <span class="string">"个成绩："</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; scores.length;i++) {</span><br><span class="line">scores[i] = scan.nextInt();</span><br><span class="line"><span class="keyword">if</span> (maxScore &lt; scores[i]) {</span><br><span class="line">maxScore = scores[i];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//获取最高分↑合并</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据学生成绩和最高分的差值，得到等级，并输出等级和成绩</span></span><br><span class="line"><span class="keyword">char</span> level;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; scores.length;i++) {</span><br><span class="line"><span class="keyword">if</span> (maxScore - scores[i] &lt;= <span class="number">10</span>) {</span><br><span class="line">level = <span class="string">'A'</span>;</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (maxScore - scores[i] &lt;= <span class="number">20</span>) {</span><br><span class="line">level = <span class="string">'B'</span>;</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (maxScore - scores[i] &lt;= <span class="number">30</span>) {</span><br><span class="line">level = <span class="string">'C'</span>;</span><br><span class="line">}<span class="keyword">else</span> {</span><br><span class="line">level = <span class="string">'D'</span>;</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"student "</span> + i +</span><br><span class="line"><span class="string">" score is "</span> + scores[i] + <span class="string">",grade is "</span> + level);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>今天打完疫苗胳膊太痛了😭酸麻还疼，所以实在懒得编辑美化内容了，就把学了啥的都贴上来呜呜呜</p><p>待会儿再摸鱼一点画，练练结构和人体</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;开始今天的学习之前碎碎念一点点……关于最近的学习情况&lt;/p&gt;
&lt;p&gt;工作相关的进展就是马上要去实验室那边，到时候不知道是怎么样的工作模式，总之电脑里面的东西，随时备份！&lt;/p&gt;
&lt;p&gt;然后抓紧时间在学Java和画画，还要兼顾着一些ps的学习，总觉得很多学习内容没有输出的话很苍白😶对于未来的工作方向，很好奇，是所有人都很迷茫，还是只有我如此呢？😔&lt;/p&gt;
&lt;p&gt;很多时候学习都会恍惚那么一瞬，开始思考为什么要学，学了有什么用，就算学能不能成功转行，转行了自己能做什么……问题太多而答案太少，索性就不去想这些东西，只专注的做好眼前的事情罢了，似乎有一些鼠目寸光？但是不做好眼前的事情，无意义的内耗更浪费吧😢&lt;/p&gt;
&lt;p&gt;认真工作，努力生活，如果一天下来是有所收获，那么也不算辜负啦。&lt;/p&gt;</summary>
    
    
    
    <category term="碎碎念" scheme="https://jinzhen-lee.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="画画" scheme="https://jinzhen-lee.github.io/tags/%E7%94%BB%E7%94%BB/"/>
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/tags/Java%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>收支记账小软件的命令行窗口实现</title>
    <link href="https://jinzhen-lee.github.io/2021/08/02/20210802/"/>
    <id>https://jinzhen-lee.github.io/2021/08/02/20210802/</id>
    <published>2021-08-02T02:26:12.000Z</published>
    <updated>2021-08-02T02:39:46.622Z</updated>
    
    <content type="html"><![CDATA[<p>今天终于要做学习Java一段时间的第一个小小的实践内容了~激动！</p><p>虽然在这里简单小程序里基本上方法的编写都是直接引用的😂</p><p>但是也是第一个自己完成的项目啦~</p><p>撒花~🎉🎊🎊🎉</p><span id="more"></span><p>把Utility和FamilyAccount的Java源码传到了我的GitHub上面，可以下载查看~</p><p><a href="https://github.com/jinzhen-lee/jinzhen-lee.github.io">jinzhen-lee/jinzhen-lee.github.io</a></p><p>下面是FamilyAccount的实现！</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FamilyAccount</span> </span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">boolean</span> isFlag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">String details = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">int</span> balance = <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(isFlag){</span><br><span class="line">System.out.println(<span class="string">"--------------------家庭收支记账软件--------------------\n"</span>);</span><br><span class="line">System.out.println(<span class="string">"                      1 收支明细"</span>);</span><br><span class="line">System.out.println(<span class="string">"                      2 登记收入"</span>);</span><br><span class="line">System.out.println(<span class="string">"                      3 登记支出"</span>);</span><br><span class="line">System.out.println(<span class="string">"                      4 退    出\n"</span>);</span><br><span class="line">System.out.println(<span class="string">"请选择（1-4）："</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> selection = Utility.readMenuSelection();</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (selection)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"------------------当前收支明细记录------------------"</span>);</span><br><span class="line">System.out.println(<span class="string">"收支\t账户金额\t收支金额\t说   明\n"</span>);</span><br><span class="line">System.out.println(details);</span><br><span class="line">System.out.println(<span class="string">"----------------------------------------------------"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">                    </span><br><span class="line">System.out.print(<span class="string">"本次收入金额："</span>);</span><br><span class="line"><span class="keyword">int</span> inPutMoney = Utility.readNumber();</span><br><span class="line">System.out.print(<span class="string">"本次收入说明："</span>);</span><br><span class="line">String inPutInfo = Utility.readString();</span><br><span class="line">System.out.println(<span class="string">"---------------------登记完成----------------------\n"</span>);</span><br><span class="line"></span><br><span class="line">balance += inPutMoney;</span><br><span class="line">details += (<span class="string">"收入\t"</span> + balance + <span class="string">"\t\t"</span> + inPutMoney + <span class="string">"\t\t  "</span> + inPutInfo) + <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"本次支出金额："</span>);</span><br><span class="line"><span class="keyword">int</span> outPutMoney = Utility.readNumber();</span><br><span class="line">System.out.print(<span class="string">"本次支出说明："</span>);</span><br><span class="line">String outPutInfo = Utility.readString();</span><br><span class="line"><span class="keyword">if</span> (balance &gt;= outPutMoney)</span><br><span class="line">{balance -= outPutMoney;</span><br><span class="line">details += (<span class="string">"支出\t"</span> + balance + <span class="string">"\t\t"</span> + outPutMoney + <span class="string">"\t\t  "</span> + outPutInfo) + <span class="string">"\n"</span>;</span><br><span class="line">}<span class="keyword">else</span></span><br><span class="line">{System.out.println(<span class="string">"支出超出账户额度，支付失败！"</span>);}</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"---------------------登记完成----------------------\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'4'</span>:</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"确认是否退出？（Y/N）"</span>);</span><br><span class="line"><span class="keyword">char</span> confirmSelection = Utility.readConfirmSelection();</span><br><span class="line"><span class="keyword">if</span> (confirmSelection == <span class="string">'Y'</span>)</span><br><span class="line">{</span><br><span class="line">isFlag = <span class="keyword">false</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>一点一点做下来只觉得好简单就结束了……</p><p>但是里面需要注意和调试内容很多！</p><p>比如制表符\t和换行\n的使用，要随时调试让页面看起来正常！</p><p>一个简单+看起来不别扭的界面都是一点一点调试出来的……想起来乔布斯那个一口气写完就直接运行还0bug的代码，真乃神人也，是我达不到的境界了🤣</p><p>代码之路任重而道远，继续努力~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天终于要做学习Java一段时间的第一个小小的实践内容了~激动！&lt;/p&gt;
&lt;p&gt;虽然在这里简单小程序里基本上方法的编写都是直接引用的😂&lt;/p&gt;
&lt;p&gt;但是也是第一个自己完成的项目啦~&lt;/p&gt;
&lt;p&gt;撒花~🎉🎊🎊🎉&lt;/p&gt;</summary>
    
    
    
    <category term="Java实践" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="Java综合应用" scheme="https://jinzhen-lee.github.io/tags/Java%E7%BB%BC%E5%90%88%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>关于之前的一个彩票程序的小想法~</title>
    <link href="https://jinzhen-lee.github.io/2021/08/01/20210801/"/>
    <id>https://jinzhen-lee.github.io/2021/08/01/20210801/</id>
    <published>2021-08-01T09:39:55.000Z</published>
    <updated>2021-08-01T09:59:00.269Z</updated>
    
    <content type="html"><![CDATA[<p>之前在学if-else循环结构的时候，写到了一个关于彩票的内容，是这样的：</p><p>假设你想开发一个玩彩票的游戏，程序随机地产生一个两位数的彩票，提示用户输入 一个两位数，然后按照下面的规则判定用户是否能赢。</p><p>1)如果用户输入的数匹配彩票的实际顺序，奖金10 000美元。 </p><p>2)如果用户输入的所有数字匹配彩票的所有数字，但顺序不一致，奖金 3 000美元。 </p><p>3)如果用户输入的一个数字仅满足顺序情况下匹配彩票的一个数字，奖金1 000美元。 </p><p>4)如果用户输入的一个数字仅满足非顺序情况下匹配彩票的一个数字，奖金500美元。 </p><p>5)如果用户输入的数字没有匹配任何一个数字，则彩票作废。</p><span id="more"></span><p>当时做出来这个之后，就开始想，可以写一个程序，计算彩票购买次数和花费的金钱（假设买一次200块），然后一直执行，直到中了为止（中多少钱都算），然后输出。</p><p>不过那个时候还没有学习循环，所以怎么想都做不出来这个，学完循环之后，突然就觉得，诶，这东西我好像能写？然后就着手开始写。</p><p>其实是很简单的一小段方法，不过能自己一点点调试出来还是很有成就感的啦！</p><p>如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LotteryUpdate</span> </span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> spentMoney = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; ; )</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> lotteryNumber = (<span class="keyword">int</span>)(Math.random() * <span class="number">90</span> + <span class="number">10</span>);</span><br><span class="line"><span class="keyword">int</span> geWei = lotteryNumber % <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> shiWei = lotteryNumber / <span class="number">10</span>;</span><br><span class="line"><span class="comment">//System.out.println(lotteryNumber);</span></span><br><span class="line">            <span class="comment">//此处是作弊码，可以看生成的数字哈哈哈~</span></span><br><span class="line">System.out.println(<span class="string">"请输入一个两位数数字：（10-99）"</span>);</span><br><span class="line"><span class="keyword">int</span> guessNumber = scan.nextInt();</span><br><span class="line"><span class="keyword">int</span> guessGe = guessNumber % <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> guessShi = guessNumber / <span class="number">10</span>;</span><br><span class="line">count++;</span><br><span class="line">spentMoney += <span class="number">200</span>;</span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> (lotteryNumber == guessNumber){</span><br><span class="line">System.out.println(<span class="string">"恭喜你获得10000美元大奖！"</span>);</span><br><span class="line"><span class="keyword">break</span>;}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (geWei == guessShi &amp;&amp; shiWei == guessGe){</span><br><span class="line">System.out.println(<span class="string">"恭喜你获得3000美元大奖！"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (geWei == guessGe || shiWei == guessShi){</span><br><span class="line">System.out.println(<span class="string">"恭喜获得1000美元大奖！"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (geWei == guessShi || shiWei == guessGe){</span><br><span class="line">System.out.println(<span class="string">"恭喜你获得500美元大奖！"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{System.out.println(<span class="string">"很遗憾，请再试试！"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"您已经购买彩票："</span> + count + <span class="string">"次"</span>);</span><br><span class="line">System.out.println(<span class="string">"您已花费："</span> + spentMoney + <span class="string">"元"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>就酱<del>记录一下满满的成就感</del>（握拳</p><p>明天开始做第一个项目，一个家庭收支软件的编写，虽然有一半的方法是直接copy的……</p><p>不过，也算一个进步啦！一点一点来叭</p><p>说起来，今天在电脑上按了一下板子的启动程序和PS的色环，感觉可以把手绘的学习搞起来了！</p><p>手写真的爽的一批（某种程度上</p><p>不过画画依旧是一个让人头秃的事情……</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前在学if-else循环结构的时候，写到了一个关于彩票的内容，是这样的：&lt;/p&gt;
&lt;p&gt;假设你想开发一个玩彩票的游戏，程序随机地产生一个两位数的彩票，提示用户输入 一个两位数，然后按照下面的规则判定用户是否能赢。&lt;/p&gt;
&lt;p&gt;1)如果用户输入的数匹配彩票的实际顺序，奖金10 000美元。 &lt;/p&gt;
&lt;p&gt;2)如果用户输入的所有数字匹配彩票的所有数字，但顺序不一致，奖金 3 000美元。 &lt;/p&gt;
&lt;p&gt;3)如果用户输入的一个数字仅满足顺序情况下匹配彩票的一个数字，奖金1 000美元。 &lt;/p&gt;
&lt;p&gt;4)如果用户输入的一个数字仅满足非顺序情况下匹配彩票的一个数字，奖金500美元。 &lt;/p&gt;
&lt;p&gt;5)如果用户输入的数字没有匹配任何一个数字，则彩票作废。&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java练习" scheme="https://jinzhen-lee.github.io/tags/Java%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>for循环、while循环和do-while循环</title>
    <link href="https://jinzhen-lee.github.io/2021/07/30/20210730/"/>
    <id>https://jinzhen-lee.github.io/2021/07/30/20210730/</id>
    <published>2021-07-30T01:21:51.000Z</published>
    <updated>2021-08-01T08:42:58.588Z</updated>
    
    <content type="html"><![CDATA[<h3 id="三种循环结构的比较"><a href="#三种循环结构的比较" class="headerlink" title="三种循环结构的比较"></a>三种循环结构的比较</h3><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(①;②;④){</span><br><span class="line">③</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*①初始条件，②循环条件，③循环体，④迭代部分</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></tbody></table></figure><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">①</span><br><span class="line"><span class="keyword">while</span>(②){</span><br><span class="line">    ③；</span><br><span class="line">    ④；</span><br><span class="line">}</span><br><span class="line"><span class="comment">//写while循环不要丢了迭代条件，否则可能会导致死循环！</span></span><br></pre></td></tr></tbody></table></figure><p><strong>for和while的比较：</strong></p><p>初始化条件部分的作用范围不同，for是写在里面的，只在此循环的作用域内有效；而while循环是写在外面的。</p><span id="more"></span><h4 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do-while循环"></a>do-while循环</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">①</span><br><span class="line"><span class="keyword">do</span>{</span><br><span class="line">       ③；</span><br><span class="line">       ④；</span><br><span class="line">   }<span class="keyword">while</span>(②);</span><br><span class="line"><span class="comment">//执行过程：① - ③ - ④ - ② - ① - ③ - ④ - ... </span></span><br></pre></td></tr></tbody></table></figure><p>说明：至少会执行一次循环</p><p>在开发中，使用for和while比较多，较少使用do-while  </p><h4 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h4><p><strong>定义：</strong></p><p>将一个循环结构A声明在另一个循环结构B的循环体中，构成了嵌套循环。</p><p>分为内层循环和外层循环。</p><p><strong>说明：</strong></p><p>①内层循环结构遍历一遍，只相当于外层循环体执行了一次<br>②假设外层循环要执行m次，内层循环要执行n次，则此时内层的循环体一共执行了m * n 次</p><p><strong>技巧：</strong></p><p>外层循环控制行数<br>内层循环控制列数</p><p>举个例子🌰</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">----* </span></span><br><span class="line"><span class="comment">   * * </span></span><br><span class="line"><span class="comment">  * * * </span></span><br><span class="line"><span class="comment"> * * * * </span></span><br><span class="line"><span class="comment">* * * * * </span></span><br><span class="line"><span class="comment"> * * * * </span></span><br><span class="line"><span class="comment">  * * * </span></span><br><span class="line"><span class="comment">   * * </span></span><br><span class="line"><span class="comment">    * </span></span><br><span class="line"><span class="comment">打印如上的图形</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//首先要考虑分成上下两个部分，然后上面的部分又能分为空格和*+空格来考虑</span></span><br><span class="line"><span class="comment">//上半部分：</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i++){</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">5</span> - i;j++){</span><br><span class="line">        System.out.print(<span class="string">" "</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>;k &lt;i + <span class="number">1</span>;k++){</span><br><span class="line">        System.out.print(<span class="string">"* "</span>);</span><br><span class="line">    }</span><br><span class="line">    System.out.println();<span class="comment">//要换行不然会全部打印到一行里</span></span><br><span class="line">    <span class="comment">//这个换行是执行完一行的换行！</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">//下半部分</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">6</span>;i++){</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">5</span>;j &gt; <span class="number">5</span> - i;j--){</span><br><span class="line">        System.out.print(<span class="string">" "</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">5</span> - i;k++){</span><br><span class="line">        System.out.print(<span class="string">"* "</span>);</span><br><span class="line">    }</span><br><span class="line">     System.out.println();</span><br><span class="line">}</span><br><span class="line">   <span class="comment">//上下部分是两个循环~不是一个！</span></span><br><span class="line"><span class="comment">//上下两个嵌套循环</span></span><br></pre></td></tr></tbody></table></figure><h4 id="嵌套循环例题"><a href="#嵌套循环例题" class="headerlink" title="嵌套循环例题"></a>嵌套循环例题</h4><p>嵌套循环真得很让人头秃……感觉自己脑子转不过弯儿来了.jpg</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//嵌套循环应用一：99乘法表</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NineNineTable</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[]args)</span></span>{</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">9</span>;i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= i;j++){</span><br><span class="line">                System.out.print(i + <span class="string">"*"</span> + j + <span class="string">"="</span> + (i * j) + <span class="string">"  "</span>);</span><br><span class="line">            }</span><br><span class="line">            System.out.println();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*100以内所有质数</span></span><br><span class="line"><span class="comment">质数：又叫素数，只能被1和它本身整除的自然数</span></span><br><span class="line"><span class="comment">--&gt;从2开始，到这个数-1结束，都不能被这个数本身整除</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">最小的质数：2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrimeNumberTest</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">        <span class="keyword">boolean</span> isFlag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">100</span>;i++){</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>;j &lt; i;j++){</span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>){</span><br><span class="line">                    isFlag =<span class="keyword">false</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (isFlag == <span class="keyword">true</span>){</span><br><span class="line">                System.out.println(i);</span><br><span class="line">            }</span><br><span class="line">            isFlag = <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>针对这个输出质数，可以做很多的优化，来提升速度</p><p>优化1：将<code>j &lt; i </code>改为<code>j &lt;= Math.sqrt(i)</code></p><p>优化2：在<code>isFlag = false</code>后面加<code>break;</code></p><p>优化3：不显示所有的质数，只对质数的个数进行计算</p><p>定义变量count</p><p>三个优化前后的区别：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrimeNumberTestUpdate</span> </span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> isFlag = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//获取当前时间距离1970-01-01 00:00:00额的毫秒数</span></span><br><span class="line"><span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= <span class="number">100000</span> ;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>;j &lt;= Math.sqrt(i);j++)</span><br><span class="line"><span class="comment">//= Math.sqrt(i)</span></span><br><span class="line">{<span class="comment">//优化2↑针对本身为质数的有效</span></span><br><span class="line"><span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">{isFlag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//优化一：针对本身为非质数的有效</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (isFlag == <span class="keyword">true</span>)</span><br><span class="line">{<span class="comment">//System.out.println(i);</span></span><br><span class="line">count++;</span><br><span class="line">}</span><br><span class="line">isFlag = <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">System.out.println(<span class="string">"质数的个数为："</span> + count);</span><br><span class="line">System.out.println(<span class="string">"所花费的时间为："</span> + (end - start));</span><br><span class="line"><span class="comment">//优化1前：16891</span></span><br><span class="line"><span class="comment">//优化1后：1754</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//优化2前：16891</span></span><br><span class="line"><span class="comment">//优化2后：296</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//两个优化都加：188</span></span><br><span class="line"><span class="comment">//三个优化都加：12</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//哇塞，12ms！算法优化也太dio了！</span></span><br></pre></td></tr></tbody></table></figure><h4 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h4><p>然后是一些关于break和continue的学习了~</p><table><thead><tr><th></th><th>适用范围</th><th>循环中的使用</th></tr></thead><tbody><tr><td>break</td><td>switch- case；循环结构中</td><td>结束当前循环</td></tr><tr><td>continue</td><td>循环结构中</td><td>结束当次循环</td></tr></tbody></table><p><strong>相同点1：</strong>两个关键字后，均不能声明其他执行语句</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BreakContinueTest</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">10</span>;i++){</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">4</span> ==<span class="number">0</span>){</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">               <span class="comment">// continue;</span></span><br><span class="line">            }System.out.println(i);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//如果是break，结束了当前循环，只输出123</span></span><br><span class="line"><span class="comment">//如果是continue，结束了当次循环，还会继续向下，会输出除了4和8以外的数</span></span><br></pre></td></tr></tbody></table></figure><p><strong>相同点2：</strong>都默认跳出包裹次关键字最近的一层循环</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">label:<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;=<span class="number">4</span> ;i++)</span><br><span class="line">{<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">10</span> ;j++ )</span><br><span class="line">{<span class="keyword">if</span> (j % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">{<span class="keyword">continue</span> label;<span class="comment">//break label;</span></span><br><span class="line"><span class="comment">//都是默认跳出包裹次关键字最近的一层循环</span></span><br><span class="line">}System.out.print(j);</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line">}</span><br><span class="line"><span class="comment">//如果想要跳出最外层的循环，需要加个标签label</span></span><br></pre></td></tr></tbody></table></figure><p>然后！学习了标签的结束方法之后，又可以对那个质数查找进行优化了！</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrimeNumberTest2</span> </span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//获取当前时间距离1970-01-01 00:00:00额的毫秒数</span></span><br><span class="line"><span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">label:<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= <span class="number">100000</span> ;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>;j &lt;= Math.sqrt(i);j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">continue</span> label;<span class="comment">//优化一：针对本身为非质数的有效</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//能执行到此步骤的都是质数</span></span><br><span class="line">count++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">System.out.println(<span class="string">"质数的个数为："</span> + count);</span><br><span class="line">System.out.println(<span class="string">"所花费的时间为："</span> + (end - start));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*花费的时间短，写起来简单！！！</span></span><br><span class="line"><span class="comment">省略了判断true和false的过程，让不是的数字全部都直接“消失”（就是continue的作用啦~）</span></span><br><span class="line"><span class="comment">然后返回，对下一个数字进行判断！</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;三种循环结构的比较&quot;&gt;&lt;a href=&quot;#三种循环结构的比较&quot; class=&quot;headerlink&quot; title=&quot;三种循环结构的比较&quot;&gt;&lt;/a&gt;三种循环结构的比较&lt;/h3&gt;&lt;h4 id=&quot;for循环&quot;&gt;&lt;a href=&quot;#for循环&quot; class=&quot;headerlink&quot; title=&quot;for循环&quot;&gt;&lt;/a&gt;for循环&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(①;②;④){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	③&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*①初始条件，②循环条件，③循环体，④迭代部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;while循环&quot;&gt;&lt;a href=&quot;#while循环&quot; class=&quot;headerlink&quot; title=&quot;while循环&quot;&gt;&lt;/a&gt;while循环&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;①&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(②){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ③；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ④；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//写while循环不要丢了迭代条件，否则可能会导致死循环！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;for和while的比较：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;初始化条件部分的作用范围不同，for是写在里面的，只在此循环的作用域内有效；而while循环是写在外面的。&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="循环结构" scheme="https://jinzhen-lee.github.io/tags/%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>switch-case和循环结构以及部分练习</title>
    <link href="https://jinzhen-lee.github.io/2021/07/28/20210728/"/>
    <id>https://jinzhen-lee.github.io/2021/07/28/20210728/</id>
    <published>2021-07-28T00:18:29.000Z</published>
    <updated>2021-07-29T11:07:39.840Z</updated>
    
    <content type="html"><![CDATA[<p>今天是一些关于if-else的语句练习~</p><p>然后结合那个廖大的Java课程概念做一些补充。</p><p>今天生理期，肚子痛的我恍惚……😧</p><span id="more"></span><p>先复习一下if-else的结构，做了几道简单的例题熟悉。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">//高富帅的标准</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IfElse</span></span></span><br><span class="line"><span class="class"></span>{<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"请输入身高：（cm）"</span>);</span><br><span class="line"><span class="keyword">int</span> height = scan.nextInt();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"请输入资产数额：（千万）"</span>);</span><br><span class="line"><span class="keyword">double</span> wealth = scan.nextDouble();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"是否帅气？（true/false）"</span>);</span><br><span class="line"><span class="keyword">boolean</span> isHandsome = scan.nextBoolean();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (height &gt;= <span class="number">180</span> &amp;&amp; wealth &gt;= <span class="number">1.0</span> &amp;&amp; isHandsome)</span><br><span class="line">{System.out.println(<span class="string">"这个男人还可以"</span>);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (height &gt;= <span class="number">180</span> || wealth &gt;= <span class="number">1.0</span> || isHandsome)</span><br><span class="line">{System.out.println(<span class="string">"勉勉强强"</span>);</span><br><span class="line">}<span class="keyword">else</span> {</span><br><span class="line">System.out.println(<span class="string">"达咩！"</span>);</span><br><span class="line">}</span><br><span class="line">    <span class="comment">//狗和人年龄的换算</span></span><br><span class="line">    Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入狗的年龄："</span>);</span><br><span class="line"><span class="keyword">int</span> dogAge = scan.nextInt();</span><br><span class="line"><span class="keyword">if</span> (dogAge &lt; <span class="number">0</span> )</span><br><span class="line">{System.out.println(<span class="string">"输入有误，请重新输入！"</span>);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (dogAge &lt;= <span class="number">2</span>)</span><br><span class="line">{System.out.println(<span class="string">"相当于人类年龄："</span> + dogAge * <span class="number">10.5</span>);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (dogAge &gt; <span class="number">2</span>)</span><br><span class="line">{System.out.println(<span class="string">"相当于人类年龄："</span> + (<span class="number">21</span> + (dogAge - <span class="number">2</span>) * <span class="number">4</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//如何获取一个随机数：10-99</span></span><br><span class="line"><span class="keyword">int</span> value = (<span class="keyword">int</span>)(Math.random() * <span class="number">90</span> + <span class="number">10</span>);</span><br><span class="line">System.out.println(value);</span><br><span class="line"><span class="comment">//公式：[a,b] : (int)(Math.random() * (b - a + 1) + a)</span></span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>把数据输出成期望的格式：可以使用格式化输出<code>System.out.prinf()</code></p><p>通过使用占位符%?，把后面的参数格式化成指定格式。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">        <span class="keyword">double</span> d = <span class="number">3.1415926</span>;</span><br><span class="line">        System.out.printf(<span class="string">"%.2f\n"</span>,d);<span class="comment">//显示两位小数3.14</span></span><br><span class="line">        System.out.printf(<span class="string">"%.4f\n"</span>,d);<span class="comment">//显示四位小数3.1416，是保留过的，四舍五入</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>scan类型不能获取char，所以先获取String类型然后再转换，使用charAt</p><p>小练习：随机生成一个10-99的两位数整数，用户输入两位数，根据不同的满足情况有不同的输出。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LotteryTest</span></span></span><br><span class="line"><span class="class"></span>{<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> lotteryNumber = (<span class="keyword">int</span>)Math.random() * <span class="number">90</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> lotteryNumberGe = lotteryNumber%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> lotteryNumberShi = lotteryNumber / <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//System.out.println(lotteryNumber);</span></span><br><span class="line"></span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入一个两位数：（10-99）"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> guessNumber = scan.nextInt();</span><br><span class="line"><span class="keyword">int</span> geWeiShu = guessNumber%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> shiWeiShu = guessNumber / <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (guessNumber == lotteryNumber)</span><br><span class="line">{System.out.println(<span class="string">"恭喜你！奖金10000美元！"</span>);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (lotteryNumberGe == shiWeiShu &amp;&amp; lotteryNumberShi == geWeiShu)</span><br><span class="line">{System.out.println(<span class="string">"恭喜你！奖金3000美元！"</span>);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (lotteryNumberGe == geWeiShu || lotteryNumberShi == shiWeiShu)</span><br><span class="line">{System.out.println(<span class="string">"恭喜你！奖金1000美元！"</span>);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (lotteryNumberGe == shiWeiShu || lotteryNumberShi == geWeiShu)</span><br><span class="line">{System.out.println(<span class="string">"恭喜你！奖金500美元！"</span>);</span><br><span class="line">}<span class="keyword">else</span> {</span><br><span class="line">System.out.println(<span class="string">"很遗憾，您未中奖"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>笑死，根本猜不中，由此可见彩票真的很难中(?</p><p>所以我加了System.out.println(lotteryNumber);</p><p>把把赢🤣</p><p>果然常胜要么是庄家要么出老千石锤🤡</p><h3 id="switch-case结构学习"><a href="#switch-case结构学习" class="headerlink" title="switch-case结构学习"></a>switch-case结构学习</h3><h4 id="1、格式"><a href="#1、格式" class="headerlink" title="1、格式"></a>1、格式</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式){</span><br><span class="line"><span class="keyword">case</span> 常量<span class="number">1</span>：</span><br><span class="line">执行语句<span class="number">1</span>；</span><br><span class="line"><span class="comment">//break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> 常量<span class="number">2</span>：</span><br><span class="line">执行语句<span class="number">2</span>；</span><br><span class="line"><span class="comment">//break</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">defualt:</span><br><span class="line">执行语句N</span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="2、说明"><a href="#2、说明" class="headerlink" title="2、说明"></a>2、说明</h4><p>①根据switch表达式的值匹配case中的常量，匹配成功进入相应case的结构中执行语句，当执行完后仍然会继续向下直到遇到break关键字，或者switch-case的结构末尾为止；</p><p>②break：执行到此关键字，跳出switch-case结构；</p><p>③case中的子句值必须是常量，不能是变量名或者不确定的表达式；</p><p>④default子句是默认，当没有匹配的case时，执行default。</p><h4 id="3、switch和if语句的对比"><a href="#3、switch和if语句的对比" class="headerlink" title="3、switch和if语句的对比"></a>3、switch和if语句的对比</h4><p>①如果判断的数值不多，而且符合byte、short、char、int、String、枚举等几种类型，建议使用switch语句，因为效率稍高；</p><p>②其他情况下，对结果为boolean类型判断，使用if，if的范围更广，也就是说，使用switch-case的语句都能改写成if-else，但是反之不成立。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入2019年的日期，得到那一天是2019年的第几天</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InputDays</span></span></span><br><span class="line"><span class="class"></span>{<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line"></span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入2019年的月份："</span>);</span><br><span class="line"><span class="keyword">int</span> month = scan.nextInt();</span><br><span class="line">System.out.println(<span class="string">"请输入2019年的日期："</span>);</span><br><span class="line"><span class="keyword">int</span> date = scan.nextInt();</span><br><span class="line"> <span class="keyword">int</span> sumDays = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">switch</span> (month)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">sumDays += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">sumDays += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">sumDays += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">sumDays += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">sumDays += <span class="number">28</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">sumDays += date;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"今天是2019年的第"</span> + sumDays + <span class="string">"天"</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>同理还可以计算某一年的日期是第几天，但是要考虑闰年的情况。</p><p>判断一年是否是闰年的标准： 1）可以被4整除，但不可被100整除 或 2）可以被400整除。</p><p>闰年和非闰年的不同点就在二月，所以要把程序改成从键盘输入年月日来判断这一天是当年的第几天的话，只需要更改一下case 为 2的情况即可：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">从键盘分别输入年、月、日，判断这一天是当年的第几天</span></span><br><span class="line"><span class="comment">注：判断一年是否是闰年的标准：</span></span><br><span class="line"><span class="comment">1）可以被4整除，但不可被100整除</span></span><br><span class="line"><span class="comment">或</span></span><br><span class="line"><span class="comment">2）可以被400整除</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalcDays</span></span></span><br><span class="line"><span class="class"></span>{<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入所计算年的年份："</span>);</span><br><span class="line"><span class="keyword">int</span> year = scan.nextInt();</span><br><span class="line">System.out.println(<span class="string">"请输入所计算年的月份："</span>);</span><br><span class="line"><span class="keyword">int</span> month = scan.nextInt();</span><br><span class="line">System.out.println(<span class="string">"请输入所计算年的日期："</span>);</span><br><span class="line"><span class="keyword">int</span> date = scan.nextInt();</span><br><span class="line"><span class="comment">//定义总天数</span></span><br><span class="line"><span class="keyword">int</span> sumDays = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (month)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">sumDays += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">sumDays += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">sumDays += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">sumDays += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="comment">//sumDays += 28;（更改的地方）</span></span><br><span class="line"><span class="comment">//判断是否是闰年</span></span><br><span class="line"><span class="keyword">if</span> ((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span> ) || year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">{sumDays += <span class="number">29</span>;</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">sumDays += <span class="number">28</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">sumDays += <span class="number">31</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">sumDays += date;</span><br><span class="line"></span><br><span class="line">System.out.println(year + <span class="string">"年"</span> + month + <span class="string">"月"</span> + date + <span class="string">"日"</span> + <span class="string">"是当年的第"</span> + sumDays + <span class="string">"天"</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>还有很多关于switch-case和if-else的练习<del>需要下来多练练敲代码，熟悉一下功能和逻辑思考方式</del></p><p>然后接下来是学习循环结构了，循环也放到这一篇好了（继续改标题🤣</p><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p>在某些条件的情况下，反复执行特定代码的功能。</p><p>循环语句的四要素：<strong>初始化部分、循环条件部分(必须是boolean类型)、循环体部分和迭代部分。</strong></p><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><p>结构：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(①;②;④){</span><br><span class="line">③</span><br><span class="line">}</span><br><span class="line"><span class="comment">//输入5遍hello，world！</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ForTest</span> </span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">5</span>;i++)<span class="comment">//这个地方不要加分号！！！！！！！！！</span></span><br><span class="line">{</span><br><span class="line">System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//定义在此for循环内的变量出了循环结构后无效</span></span><br></pre></td></tr></tbody></table></figure><p>简单的累计遍历小练习~</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">100</span>;i++){</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>){</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                sum += i;</span><br><span class="line">                count++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"一共有"</span> + count + <span class="string">"个偶数"</span>);</span><br><span class="line">            System.out.println(<span class="string">"总和为："</span> + sum);</span><br><span class="line">        <span class="comment">//要从循环体中出来，不然每循环一次都要重复的写一遍，但是只在最后的结果需要显示</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>for的语句练习：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">编写程序从1循环到150，并在每行打印一个值，另外在每个3的倍数行</span></span><br><span class="line"><span class="comment">上打印出“foo”,在每个5的倍数行上打印“biz”,在每个7的倍数行上打印</span></span><br><span class="line"><span class="comment">输出“baz”</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest2</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">150</span>;i++){</span><br><span class="line">            System.out.print(i + <span class="string">"  "</span>);</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span>){</span><br><span class="line">                System.out.print(<span class="string">"foo"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">5</span> == <span class="number">0</span>){</span><br><span class="line">                System.out.print(<span class="string">"biz"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">7</span> == <span class="number">0</span>){</span><br><span class="line">                System.out.print(<span class="string">"baz"</span>);</span><br><span class="line">            }</span><br><span class="line">            System.out.println();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>今天的学习~就到这里，明天把练习再多做一做！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天是一些关于if-else的语句练习~&lt;/p&gt;
&lt;p&gt;然后结合那个廖大的Java课程概念做一些补充。&lt;/p&gt;
&lt;p&gt;今天生理期，肚子痛的我恍惚……😧&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="例题练习" scheme="https://jinzhen-lee.github.io/tags/%E4%BE%8B%E9%A2%98%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>博客美化第二弹！</title>
    <link href="https://jinzhen-lee.github.io/2021/07/27/20210727-learning/"/>
    <id>https://jinzhen-lee.github.io/2021/07/27/20210727-learning/</id>
    <published>2021-07-27T07:36:15.000Z</published>
    <updated>2021-07-27T10:30:39.771Z</updated>
    
    <content type="html"><![CDATA[<p>我发誓我再也不瞎动next里面的css文件夹的任何文件了……</p><p>今天心血来潮说搞一搞我的博客美化吧，看着光秃秃的，人家的博客都花里胡哨的，我就像个白板默认的一样。</p><p>然后一搞不要紧，疯狂报错……bug从早上九点修到下午五点😑</p><p>想死的心都有了！！！！！！！！！！！</p><p>先把错误讲了，不然我要记不住了。。。</p><p><strong>针对hexo版本5.4.0，next主题是8.6.1版本！</strong></p><span id="more"></span><h4 id="弥天大错在此"><a href="#弥天大错在此" class="headerlink" title="弥天大错在此"></a>弥天大错在此</h4><p>First of all！答应我，永远不要动这个地方好吗👇</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, <span class="keyword">if</span> you use GitHub Page, set url as <span class="string">'https://username.github.io/project'</span></span><br><span class="line">#url: http:<span class="comment">//example.com</span></span><br></pre></td></tr></tbody></table></figure><p>这个是hexo/目录下的站点配置文件！就是那个在无数次配置中会被改来改去的_config.yml，里面有一个URL，但是！！！！不要动！！！！这个地方不要动！！！！</p><p>本来在下午两点左右的时候我的网页时部署成功了的，然后我手欠把这里改成了我的GitHub仓库地址，还觉得沾沾自喜，好像捡了漏一样，但是怎么不动动我芝麻大的脑子想一想！！！！！以前从来没改过一点问题也没有！！！你现在改个屁啊改什么改！（爆锤</p><p>so just keep it forever.</p><p>虽然不知道我最后造成的最大漏洞跟这个有没有关系，但是先贴上来，以后万一再出事那可能就不是这个的缘故……</p><p>总之就是，本地部署一切正常，什么都显示的很对，然后打开网页，格式统统没有！（崩溃！！！）更过分的是！！点击分类的时候直接给我报404！！！！</p><figure class="highlight axapta"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> root urls (<span class="keyword">like</span> http:<span class="comment">//example.com/) you must provide an index.html file.</span></span><br></pre></td></tr></tbody></table></figure><p>for root urls (like <a href="http://example.com/">http://example.com/</a>) you must provide an index.html file.</p><p>就是上面这句话！搭配硕大的404我整个人都疯了！！！！</p><p>他吗的写了十天的博客你跟我说404？？？？？</p><p>总之改来改去就改到这个地方了……找了个源文件吧最开始的内容替换回来就正常了……so……</p><p>不过我把下面的改掉了，没用源文件，因为做一个美化设置，后面讲设置内容，先把改动放上来，就在这个URL的下面两行有一个pretty_urls</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="keyword">false</span> # Set to <span class="keyword">false</span> to remove trailing <span class="string">'index.html'</span> from permalinks</span><br><span class="line">  trailing_html: <span class="keyword">false</span> # Set to <span class="keyword">false</span> to remove trailing <span class="string">'.html'</span> from permalinks</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>把里面默认的true改成false！</p><p>然后，不要改动底部标签，会变得不幸。🙃</p><p><a href="https://blog.csdn.net/ganzhilin520/article/details/79048018">hexo修改文章底部的那个带#号的标签_阿甘的博客-CSDN博客</a></p><p>就是这个！！！！！不要改！！！！！！</p><p>改完你的标签下一秒就没（草</p><p>倒不是说标签没了，但是标签的内容没了，就剩个标签图在那了……</p><p>那我改个屁啊！有什么意义！</p><p>然后费劲吧啦找了源码又copy回去。。。我何苦呢！！！</p><p>重点是发现标签没了我以为是我改什么其他地方改坏了！还找了配置tag的文件好一通修补！！</p><p>顺便，在tags的index文件里面加layout并没有用，试过了😢</p><p>所以，不要改标签，会变得不幸！！！</p><p>除非你知道怎么能把字加上，如果你知道，麻烦点击我博客右下方的那个消息图标发消息给我求求了（哭</p><p>就是那种能有好看标签图片还有字的！</p><p>接下来说一下今天做的具体美化，改动还是蛮大的，跟以前的白板比起来简直就是天上地下。</p><p>参考文件很多……因为总是出错而不得不到处找修改方式🙃</p><h4 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h4><p>全局字体什么的我其实看不太出来哪个好看哪个不行……所以就没怎么管，但是我的代码区一定要时尚时尚最时尚！（什</p><p>所以就搞这个！</p><p>先打开hexo/themes/next文件夹下的主题配置文件_config.yml，搜索highlight，先改这里：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span><span class="string">//改成true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> </span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span><span class="string">//这个暂时先改成false，后面会说为什么</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure><p>然后再找到这个地方：</p><figure class="highlight dts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">codeblock:</span></span><br><span class="line">  <span class="meta"># Code Highlight theme</span></span><br><span class="line">  <span class="meta"># All available themes: https:<span class="comment">//theme-next.js.org/highlight/</span></span></span><br><span class="line">  <span class="comment">//上面已经给出了网站，就去这个网站里面找到你想要的代码格式，复制过来名字就可以！</span></span><br><span class="line">  <span class="comment">//然后看你选择的引擎engine是哪一个，如果是prism，那么把上面的false在改成true</span></span><br><span class="line">  <span class="comment">//但是我觉得prism的不好看！（理不直气也壮</span></span><br><span class="line"><span class="symbol">  theme:</span></span><br><span class="line"><span class="symbol">    light:</span> atelier-lakeside-dark</span><br><span class="line"><span class="symbol">    dark:</span> atelier-lakeside-dark</span><br><span class="line"><span class="symbol">  prism:</span></span><br><span class="line"><span class="symbol">    light:</span> prism</span><br><span class="line"><span class="symbol">    dark:</span> prism-dark</span><br><span class="line">  <span class="meta"># Add copy button on codeblock</span></span><br><span class="line"><span class="symbol">  copy_button:</span></span><br><span class="line">  <span class="comment">//这个地方是代码区是否显示复制，最好显示！多方便呢！</span></span><br><span class="line"><span class="symbol">    enable:</span> true</span><br><span class="line">    <span class="meta"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="comment">//这个是显示的样式，Mac样式超酷我的菜！</span></span><br><span class="line"><span class="symbol">    style:</span> mac</span><br></pre></td></tr></tbody></table></figure><h4 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h4><p>这个完全可以照搬这个大神的教程，一模一样不需要更改！</p><p><a href="https://jrbcode.gitee.io/posts/63c4b34f.html">Hexo+NexT博客搭建 | CodeHeap (gitee.io)</a></p><p>PS：不过里面分类、归档和标签的修改不要学，会报错，会改八小时的bug🙂</p><h4 id="修改字体大小"><a href="#修改字体大小" class="headerlink" title="修改字体大小"></a>修改字体大小</h4><p><a href="https://jrbcode.gitee.io/posts/63c4b34f.html">Hexo+NexT博客搭建 | CodeHeap (gitee.io)</a></p><p>还是这个教程！（直接贴是不是显得我好懒……</p><p>我是用网上一搜一大片的方法改完之后，又用这里面的在themes\next\source\css_variables\base.styl中</p><p>修改的。</p><figure class="highlight mel"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Font size</span></span><br><span class="line">$font-<span class="keyword">size</span>-base           = (hexo-config(<span class="string">'font.enable'</span>) and hexo-config(<span class="string">'font.global.size'</span>) is a <span class="string">'unit'</span>) ? <span class="keyword">unit</span>(hexo-config(<span class="string">'font.global.size'</span>), em) : <span class="number">1</span>em;</span><br><span class="line">$font-<span class="keyword">size</span>-smallest       = <span class="number">.75</span>em;</span><br><span class="line">$font-<span class="keyword">size</span>-smaller        = <span class="number">.8125</span>em;</span><br><span class="line">$font-<span class="keyword">size</span>-small          = <span class="number">.81</span>em;</span><br><span class="line">$font-<span class="keyword">size</span>-medium         = <span class="number">1</span>em;</span><br><span class="line">$font-<span class="keyword">size</span>-large          = <span class="number">1.125</span>em;</span><br><span class="line">$font-<span class="keyword">size</span>-larger         = <span class="number">1.25</span>em;</span><br><span class="line">$font-<span class="keyword">size</span>-largest        = <span class="number">1.5</span>em;</span><br></pre></td></tr></tbody></table></figure><p>这是我的改动数据~~</p><h4 id="创建标签、分类、归档"><a href="#创建标签、分类、归档" class="headerlink" title="创建标签、分类、归档"></a>创建标签、分类、归档</h4><p><a href="https://jrbcode.gitee.io/posts/63c4b34f.html">Hexo+NexT博客搭建 | CodeHeap (gitee.io)</a></p><p>还、还是这个教程……（心虚）</p><p>但是有一点！（忽然支棱）</p><p>修改tags和categories文件夹里面的index.md文件的时候，type: 后面的内容不用加引号！像这样！</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">title</span>: 标签</span><br><span class="line"><span class="attribute">date</span>: <span class="number">2021</span>-<span class="number">07</span>-<span class="number">27</span> <span class="number">11</span>:<span class="number">30</span>:<span class="number">03</span></span><br><span class="line"><span class="attribute">type</span>: tags</span><br></pre></td></tr></tbody></table></figure><p>清清爽爽！</p><p>如果要添加多个标签，格式是这样的：</p><figure class="highlight subunit"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: </span><br><span class="line">date: </span><br><span class="line">categories: </span><br><span class="line"><span class="keyword">tags:</span> [标签1,标签2,标签3]</span><br></pre></td></tr></tbody></table></figure><p>使用的是英文逗号，然后tags后面要空一格，不知道为什么搜的都是让用下面这种：</p><figure class="highlight subunit"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tags:</span></span><br><span class="line">-tag1</span><br><span class="line">-tag2</span><br></pre></td></tr></tbody></table></figure><p>但是臣妾做不到啊！！！一用就报错！！！！</p><p>所以后来全部都换了上面那种……</p><p><strong>慎用任何需要改动index文件的操作！！！！！</strong></p><p><strong>不要瞎改index！！！！！！</strong></p><p>说的就是侧边栏滚动样式！别改！（在上面那个网站的教程里有，但是别改！）</p><p>这里面bug太多你把握不住(?)</p><h4 id="back2top设置"><a href="#back2top设置" class="headerlink" title="back2top设置"></a>back2top设置</h4><p>就是我博客右下角那个会显示滚动进度条的小灰球啦~~~（那是月亮</p><p><a href="https://tding.top/archives/567debe0.html">本博客当前使用的插件总结 | 小丁的个人博客 (tding.top)</a></p><p>用的是这个大佬的方法，没有出错，满意！</p><p>其实next主题是自带back2top的一些设置的~</p><figure class="highlight dts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">back2top:</span></span><br><span class="line"><span class="symbol">  enable:</span> true<span class="comment">//true就能开启啦~</span></span><br><span class="line">  <span class="meta"># Back to top in sidebar.</span></span><br><span class="line"><span class="symbol">  sidebar:</span> true<span class="comment">//侧边栏也要2top！</span></span><br><span class="line">  <span class="meta"># Scroll percent label in b2t button.</span></span><br><span class="line"><span class="symbol">  scrollpercent:</span> true<span class="comment">//这个会显示百分比，方便！</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Reading progress bar</span></span><br><span class="line"><span class="symbol">reading_progress:</span></span><br><span class="line"><span class="symbol">  enable:</span> true<span class="comment">//这个在顶端，就是往下拉网页能看到进度条~聊胜于无的开了</span></span><br><span class="line">  <span class="meta"># Available values: left | right</span></span><br><span class="line"><span class="symbol">  start_at:</span> left<span class="comment">//就是从左向右加载，比较符合一般人的视觉习惯</span></span><br><span class="line">  <span class="meta"># Available values: top | bottom</span></span><br><span class="line"><span class="symbol">  position:</span> top<span class="comment">//位置就是在顶端~</span></span><br><span class="line"><span class="symbol">  reversed:</span> false</span><br><span class="line"><span class="symbol">  color:</span> <span class="string">"#37c6c0"</span></span><br><span class="line"><span class="symbol">  height:</span> <span class="number">5</span>px<span class="comment">//调整这个进度条的大小，一开始是3我觉得小了就改成了5</span></span><br></pre></td></tr></tbody></table></figure><h4 id="配置DaoVoice"><a href="#配置DaoVoice" class="headerlink" title="配置DaoVoice"></a>配置DaoVoice</h4><p><a href="https://hoxis.github.io/hexo-next-daovoice.html">hexo next 配置 DaoVoice 实现在线聊天功能 | hoxis’ blog</a></p><p>用的是这个教程！</p><p>倦了，不想自己打字了，跟着无脑操作就好！</p><p>其实还试着开了一下Valine的评论，但是失败了……</p><p>也不敢作妖了，就这吧，这些已经目前很满意了🤗</p><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>折腾了一天，午饭都没吃，狠狠的懂了……</p><p>记得备份！记得备份！记得备份！</p><p>不要直接改源码！不要直接改源码！不要直接改源码！</p><p>明天又是快乐Java的一天呢~~~</p><p>至于今天，我要吃饭去了……学习什么的再说吧（嘎嘎</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我发誓我再也不瞎动next里面的css文件夹的任何文件了……&lt;/p&gt;
&lt;p&gt;今天心血来潮说搞一搞我的博客美化吧，看着光秃秃的，人家的博客都花里胡哨的，我就像个白板默认的一样。&lt;/p&gt;
&lt;p&gt;然后一搞不要紧，疯狂报错……bug从早上九点修到下午五点😑&lt;/p&gt;
&lt;p&gt;想死的心都有了！！！！！！！！！！！&lt;/p&gt;
&lt;p&gt;先把错误讲了，不然我要记不住了。。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;针对hexo版本5.4.0，next主题是8.6.1版本！&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="博客美化" scheme="https://jinzhen-lee.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    
    
    <category term="背景图片设置" scheme="https://jinzhen-lee.github.io/tags/%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E8%AE%BE%E7%BD%AE/"/>
    
    <category term="从侧边栏修改" scheme="https://jinzhen-lee.github.io/tags/%E4%BB%8E%E4%BE%A7%E8%BE%B9%E6%A0%8F%E4%BF%AE%E6%94%B9/"/>
    
    <category term="DaoVoice" scheme="https://jinzhen-lee.github.io/tags/DaoVoice/"/>
    
  </entry>
  
  <entry>
    <title>流程控制结构if...else的学习和用Scanner从键盘获取不同数据类型的方法</title>
    <link href="https://jinzhen-lee.github.io/2021/07/26/20210726-learning/"/>
    <id>https://jinzhen-lee.github.io/2021/07/26/20210726-learning/</id>
    <published>2021-07-26T00:12:03.000Z</published>
    <updated>2021-07-27T04:05:48.021Z</updated>
    
    <content type="html"><![CDATA[<p>发现尚硅谷的课程有的讲得很简略，但是有些细节解释得却很好，所以先看视频课，然后对应再看廖大文字版教程和菜鸟教程。</p><p>视频的东西看第一遍很囫囵吞枣，就是看过了却没在脑子里留下什么印象，后来碰到一些问题了。到处找答案，看到答案才恍然大悟：哦，原来这个地方我之前就学过了！这种情况还是要努力避免，不做无用功啊~</p><p>视频里面讲到的代码，最好自己跟着手敲一遍，有些不易理解的要多敲好几遍，直到能完全理解并敲下来~</p><span id="more"></span><p>鉴于之前对于String字符串的数据引用不理解的地方很多，所以又返回去看了一遍有关String的课程，下面是一些补充内容的学习：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">short</span> s = <span class="number">2</span>;</span><br><span class="line">s = s + <span class="number">3</span>;<span class="comment">//编译不通过，s为int类型，无法向下兼容</span></span><br><span class="line"><span class="comment">//s = (int)(s + 2);可以强转，但是可能会造成数据损失</span></span><br><span class="line"><span class="comment">//强转要加括号把所有内容括住</span></span><br></pre></td></tr></tbody></table></figure><h3 id="程序流程控制结构"><a href="#程序流程控制结构" class="headerlink" title="程序流程控制结构"></a>程序流程控制结构</h3><p>今天开始接触学习程序控制语句，程序控制语句是用来控制程序中各语句执行顺序的语句，可以把语句组合成能完成一定功能的小逻辑模块。</p><p>分为三种：顺序结构、分支结构和循环结构。</p><h4 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h4><p>从上到下执行，中间没有判断和跳转，之前进行的一些练习语句就是顺序结构，比如给int型变量赋值等于2，然后对数字2进行一些计算，或者结合字符串进行一些引用，都是按照代码的编写顺序进行执行的。</p><h4 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h4><p>根据条件，选择性的执行某段代码。</p><p>这里会有条件的判断，有if … else和switch - case两种分支语句，都是先输入一个内容，对这个内容进行判断，根据其符合的情况，会有不同的输出。</p><p>先说if … else，一共有三种格式：</p><p>第一种👇</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件表达式){</span><br><span class="line">    执行表达式</span><br><span class="line">}</span><br><span class="line"><span class="comment">//条件为true，执行代码；条件为false，跳过进行下一内容</span></span><br></pre></td></tr></tbody></table></figure><p>第二种👇 </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件表达式){</span><br><span class="line">    执行表达式<span class="number">1</span></span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">    执行表达式<span class="number">2</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">//true执行代码块1，false执行代码块2</span></span><br></pre></td></tr></tbody></table></figure><p>第三种👇</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件表达式){</span><br><span class="line">    执行表达式<span class="number">1</span></span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(条件表达式){</span><br><span class="line">    执行表达式<span class="number">2</span></span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(条件表达式){</span><br><span class="line">    执行表达式<span class="number">3</span></span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(条件表达式){</span><br><span class="line">    执行表达式<span class="number">4</span></span><br><span class="line">}</span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line">    执行表达式n</span><br><span class="line">}</span><br><span class="line"><span class="comment">//n选一，如果都不满足则执行else</span></span><br></pre></td></tr></tbody></table></figure><h4 id="使用Scanner从键盘获取不同类型数据"><a href="#使用Scanner从键盘获取不同类型数据" class="headerlink" title="使用Scanner从键盘获取不同类型数据"></a>使用Scanner从键盘获取不同类型数据</h4><p>新技能，get了！</p><p>之前的都是需要自己从程序里直接输入执行内容，至此可以先执行程序再输入内容，学到了一丢丢丢的交互！</p><p>每天学到新东西就很开心😋</p><p>使用Scanner要记住一系列新的代码，还是老规矩，先背会再理解，不然如果理解透可能又要好久（还不能完全搞懂）😢</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从键盘输入姓名、年龄、性别、体重、是否选择等选项</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScannerTest</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"请输入你的姓名："</span>);</span><br><span class="line">        String name = scan.next();</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"请输入你的性别："</span>);</span><br><span class="line">        String gender = scan.next();</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"请输入你的年龄："</span>);</span><br><span class="line">        <span class="keyword">int</span> age = scan.nextInt();</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"请输入你的体重："</span>);</span><br><span class="line">        <span class="keyword">double</span> weight = scan.nextDouble();</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"是否选中？true/false"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> isLove = scan.nextBoolean();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>注意：</strong>需要根据相应的方法，来输入指定类型的值，如果输入的数据类型与要求的类型不匹配，会报异常：InputMisMatchException，导致程序中止</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*补充一道例题~</span></span><br><span class="line"><span class="comment">岳小鹏参加Java考试，他和父亲岳不群达成承诺：</span></span><br><span class="line"><span class="comment">如果：</span></span><br><span class="line"><span class="comment">成绩为100分时，奖励一辆BMW；</span></span><br><span class="line"><span class="comment">成绩为(80，99]时，奖励一台iphone xs max；</span></span><br><span class="line"><span class="comment">当成绩为[60,80]时，奖励一个 iPad；</span></span><br><span class="line"><span class="comment">其它时，什么奖励也没有。</span></span><br><span class="line"><span class="comment">请从键盘输入岳小鹏的期末成绩，并加以判断</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScannerTest</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span>{</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"请输入期末成绩：（0-100）"</span>);</span><br><span class="line">        <span class="keyword">int</span> score = scan.nextInt();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(score == <span class="number">100</span>){</span><br><span class="line">            System.out.println(<span class="string">"奖励一台BMW"</span>);</span><br><span class="line">        }<span class="keyword">else</span> <span class="keyword">if</span>(score &gt; <span class="number">80</span> &amp;&amp; score &lt;= <span class="number">99</span>){</span><br><span class="line">            System.out.println(<span class="string">"奖励一台iphone xs max"</span>)</span><br><span class="line">        }<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">60</span> &amp;&amp; score &lt; <span class="number">80</span>){</span><br><span class="line">            System.out.println(<span class="string">"奖励一个iPad"</span>)；</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//else{System.out.println("什么都没有")}</span></span><br><span class="line">        <span class="comment">//这个结构是可选的</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>说明总结：</p><p>1、else结构是可选的</p><p>2、针对条件表达式：</p><blockquote><p>如果多个条件表达式之间是“互斥关系”（或没有交集的关系），那么判断和执行语句声明在上面还是下面，不影响。</p><p>如果多个条件表达式之间有交集的关系，需要根据实际情况，考虑清楚应该将哪个结构声明在上面。</p><p>如果多个条件表达式之间有包含的关系，通常情况下，需要将范围小的声明在范围大的上面，否则，范围小的就没机会执行了，白写了hhh</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一道例题，输入三个整数自动排序~</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScannerExample</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span>{</span><br><span class="line"></span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"请输入第一个整数：(三个整数不可相同)"</span>);</span><br><span class="line"><span class="keyword">int</span> num1 = scan.nextInt();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"请输入第二个整数："</span>);</span><br><span class="line"><span class="keyword">int</span> num2 = scan.nextInt();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"请输入第三个整数："</span>);</span><br><span class="line"><span class="keyword">int</span> num3 = scan.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (num1 &gt; num2 )</span><br><span class="line">{<span class="keyword">if</span> (num3 &gt; num1)</span><br><span class="line">{System.out.println(num3 + <span class="string">"&gt;"</span> + num1 + <span class="string">"&gt;"</span> + num2);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (num3 &lt; num2)</span><br><span class="line">{System.out.println(num3 + <span class="string">"&lt;"</span> + num2 + <span class="string">"&lt;"</span> + num1);</span><br><span class="line">}<span class="keyword">else</span> </span><br><span class="line">{System.out.println(num1 + <span class="string">"&gt;"</span> + num3 + <span class="string">"&gt;"</span> + num2);</span><br><span class="line">}</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">if</span> (num3 &gt; num2)</span><br><span class="line">{System.out.println(num3 + <span class="string">"&gt;"</span> + num2 + <span class="string">"&gt;"</span> + num1);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (num3 &lt; num1)</span><br><span class="line">{System.out.println(num2 + <span class="string">"&gt;"</span> + num1 + <span class="string">"&gt;"</span> + num3);</span><br><span class="line">}<span class="keyword">else</span></span><br><span class="line">{System.out.println(num2 + <span class="string">"&gt;"</span> + num3 + <span class="string">"&gt;"</span> + num1);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>说明：</p><p>1、if…else 的结构，是可以嵌套的。</p><p>2、如果嵌套里面if…else的执行语句只有一行，对应的一对儿大括号是可以省略的，但是不建议省略。</p><p>补充一道总有点翻不转还错了两遍的题…… 😅</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> b = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (b == <span class="keyword">false</span>)</span><br><span class="line">            <span class="comment">//如果写成 b = false能编译通过吗？如果能，结果是？</span></span><br><span class="line">{System.out.println(<span class="string">"a"</span>);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (b)</span><br><span class="line">{System.out.println(<span class="string">"b"</span>);</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span> (!b)</span><br><span class="line">{System.out.println(<span class="string">"c"</span>);</span><br><span class="line">}<span class="keyword">else</span> </span><br><span class="line">System.out.println(<span class="string">"d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//b == false，结果为b</span></span><br><span class="line"><span class="comment">//b = false，结果为c</span></span><br></pre></td></tr></tbody></table></figure><p>今天先到这里啦，明天再做一些补充练习，巩固if…else结构~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;发现尚硅谷的课程有的讲得很简略，但是有些细节解释得却很好，所以先看视频课，然后对应再看廖大文字版教程和菜鸟教程。&lt;/p&gt;
&lt;p&gt;视频的东西看第一遍很囫囵吞枣，就是看过了却没在脑子里留下什么印象，后来碰到一些问题了。到处找答案，看到答案才恍然大悟：哦，原来这个地方我之前就学过了！这种情况还是要努力避免，不做无用功啊~&lt;/p&gt;
&lt;p&gt;视频里面讲到的代码，最好自己跟着手敲一遍，有些不易理解的要多敲好几遍，直到能完全理解并敲下来~&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java基础" scheme="https://jinzhen-lee.github.io/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Scanner" scheme="https://jinzhen-lee.github.io/tags/Scanner/"/>
    
  </entry>
  
  <entry>
    <title>JDK的环境变量配置和其他内容的学习</title>
    <link href="https://jinzhen-lee.github.io/2021/07/25/JDK%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E5%92%8C%E5%85%B6%E4%BB%96%E5%86%85%E5%AE%B9%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>https://jinzhen-lee.github.io/2021/07/25/JDK%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E5%92%8C%E5%85%B6%E4%BB%96%E5%86%85%E5%AE%B9%E7%9A%84%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-07-25T02:05:13.000Z</published>
    <updated>2021-07-27T04:04:51.415Z</updated>
    
    <content type="html"><![CDATA[<p>昨天安装了一下最新版本的Java，大概是JavaSE16？然后写一下Windows系统里环境变量的配置方法。</p><span id="more"></span><h4 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h4><p>和之前配置mysql差不多，在跟随基本步骤安装完Java之后，鼠标右键点击我的电脑——&gt;属性，在左边的那一栏里寻找高级系统设置，点开之后选择右下角的环境变量：</p><p><img src="https://i.loli.net/2021/07/25/rWRBi5ycnC7Eqzw.png" alt="image-20210725100918575"></p><p>点开之后，先在上面的用户变量的地方，选择新建，然后创建如下图所示的内容：</p><p><img src="https://i.loli.net/2021/07/25/EAp8OjY14r6IghM.png" alt="image-20210725101100576"></p><p>注意，变量值就是你安装Java的地方，写到jdk这个文件夹的位置地址就可以，注意里面不要出现中文。</p><p>然后在下面的系统变量里，同样的新建添加一遍这个内容（看了其他教程的补充，反正把两个都写一遍没什么错）。</p><p>添加完后，在环境变量的地方，再次点击新建，新建一个CLASSPATH内容：</p><p><img src="https://i.loli.net/2021/07/25/WCkwjyZYFXqxnTQ.png" alt="image-20210725101432377"></p><p>变量名：CLASSPATH</p><p>变量值：.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar</p><p>（可以直接复制）</p><p>然后再选择系统变量里面的PATH：</p><p><img src="https://i.loli.net/2021/07/25/kUXQvuIAJWBCxY8.png" alt="image-20210725101555179"></p><p>双击打开，或者选择编辑，在里面新建一个%JAVA_HOME%\bin：</p><p><img src="https://i.loli.net/2021/07/25/dCRo7f1eqrLNZSb.png" alt="image-20210725101707122"></p><p>点击确定，确定，确定，退出选项框环境变量的配置，然后环境变量就配置好了</p><p>然后win+R，输入cmd，打开命令行窗口，输入java -version，查看版本</p><p><img src="https://i.loli.net/2021/07/25/KMXY8ATON1eEp7C.png" alt="image-20210725101957242"></p><p>可以看到是最新版，电脑上是可以安装很多个版本的Java的，之前安装了5.0版，然后又下载了最新版，他们彼此不会覆盖，只是要使用哪个版本，在进行环境变量的配置时就配置到哪个版本的文件夹去，是可以更改版本使用的。</p><hr><p>接下来是Java学习的内容，目前是在跟着廖雪峰的课程补缺前面的基础概念，菜鸟教程里面的概念排版有些乱……零基础不友好<span class="github-emoji"><span>😢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>还有跟着尚硅谷的视频也学了一些内容，干啥啥不行搜集信息第一名，找的资料一大堆<span class="github-emoji"><span>😓</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f613.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>三个结合着一起学习能互相补充，这三个无论哪个都有缺陷的地方，就同时看慢慢推进。</p><h4 id="整型运算"><a href="#整型运算" class="headerlink" title="整型运算"></a>整型运算</h4><p>整型运算可以进行简单的四则运算，但是结果都为整数；</p><p>当整型运算的结果溢出，会使用二进制移位，将结果变为负数；</p><p>整型运算的位运算包括与、或、非、异或：&amp;、|、~、^；</p><p>自增和自减类型，根据加号和减号的位置来判断是先运算再赋值还是先赋值再运算；</p><p>整型之间进行运算时，小的整型类型自动提升类型为较大类型（如short和int进行运算，结果为int），但是如果将大范围的整数专为小范围整数，可能会报错。</p><h4 id="浮点型运算"><a href="#浮点型运算" class="headerlink" title="浮点型运算"></a>浮点型运算</h4><p>浮点型运算的四则运算结果都为浮点型，但是如果一个浮点型和一个整型进行混合的四则运算时，整形不会变为浮点，结果还是为浮点型：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line"><span class="keyword">double</span> d = <span class="number">3.975</span> + <span class="number">8</span> / <span class="number">5</span>;</span><br><span class="line">System.out.println(d);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.975</span></span><br></pre></td></tr></tbody></table></figure><p>浮点型运算在除数为0是不会报错，但是会返回特殊值：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> d1 = <span class="number">0.0</span> / <span class="number">0</span>; <span class="comment">//NaN(Not a Number)</span></span><br><span class="line"><span class="keyword">double</span> d2 = <span class="number">1.0</span> / <span class="number">0</span>; <span class="comment">//Infinity(无穷大)</span></span><br><span class="line"><span class="keyword">double</span> d3 = -<span class="number">1.0</span> / <span class="number">0</span>; <span class="comment">//-Infinity(负无穷大)</span></span><br></pre></td></tr></tbody></table></figure><p>浮点型运算如果想要四舍五入，就对浮点数+0.5再强制转型</p><p>（对于int类型来说，3.9及以下都是3）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalcFloat</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">            <span class="keyword">double</span> d4 = <span class="number">3.1</span>;</span><br><span class="line">            <span class="keyword">int</span> n = (<span class="keyword">int</span>)(d4 + <span class="number">0.5</span>);</span><br><span class="line">            System.out.println(n);</span><br><span class="line">        }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//输出为3</span></span><br><span class="line"><span class="comment">//如果改为：</span></span><br><span class="line"><span class="keyword">double</span> d4 = <span class="number">3.5</span>;</span><br><span class="line"><span class="keyword">int</span> n = (<span class="keyword">int</span>)(d4 + <span class="number">0.5</span>);</span><br><span class="line">System.out.println(n);</span><br><span class="line"><span class="comment">//输出为4</span></span><br></pre></td></tr></tbody></table></figure><h4 id="布尔运算"><a href="#布尔运算" class="headerlink" title="布尔运算"></a>布尔运算</h4><p>布尔运算之前有大篇幅的学习过，在此不再赘述，就简单总结一下，布尔运算的运算符包括与或非：&amp;&amp;、||、！，同时布尔运算存在短路运算，即：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x &amp;&amp; y;</span><br><span class="line"><span class="comment">//当x为true的时候，正常计算，当x为false时，不再计算y的内容，直接输出false</span></span><br><span class="line">x || y;</span><br><span class="line"><span class="comment">//当x为true的时候，直接输出true，不计算y，当x为false时，才会去计算y</span></span><br><span class="line">！x;</span><br><span class="line"><span class="comment">//当x为false，输出true，x为true，输出false</span></span><br></pre></td></tr></tbody></table></figure><p>三元运算符：<code>b ? x : y</code>当b为true的时候，执行x，当b为false的时候，执行y。</p><p>一个简单的小练习：判定指定年龄是否为小学生</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JudgeAge</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">            <span class="keyword">int</span> age = <span class="number">9</span>;</span><br><span class="line">            <span class="keyword">boolean</span> isPrimaryStudent = age &gt; <span class="number">6</span> &amp;&amp; age &lt; <span class="number">12</span>;</span><br><span class="line">            System.out.println(isPrimaryStudent ? <span class="string">"是小学生"</span> : <span class="string">"不是小学生"</span>);</span><br><span class="line">        }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//输出：是小学生</span></span><br></pre></td></tr></tbody></table></figure><h4 id="字符和字符串"><a href="#字符和字符串" class="headerlink" title="字符和字符串"></a>字符和字符串</h4><p><code>char</code>为字符，占两个字节，中文英文都是一个Unicode编码，用单引号表示。</p><p><code>String</code>是引用类型，用双引号表示，<code>\</code>是转义符，用两个<code>\\</code>表示<code>\</code>。</p><p>字符串之间可以用加号进行连接，字符串和其他数据类型进行连接的时候，会自动将其他数据类型转化为字符串类型。</p><p>用<code>"""..."""</code>来表示多行字符串引用。</p><p>一道相关练习，请将一组int值视为字符的Unicode编码，然后将它们拼成一个字符串：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringTest</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">72</span>;</span><br><span class="line">            <span class="keyword">int</span> b = <span class="number">105</span>;</span><br><span class="line">            <span class="keyword">int</span> c = <span class="number">65281</span>;</span><br><span class="line">            String s = <span class="string">""</span> + (<span class="keyword">char</span>)a + (<span class="keyword">char</span>)b + (<span class="keyword">char</span>)c;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">            <span class="comment">//先转为字符串类型再连接，输出为“Hi！”</span></span><br><span class="line">            <span class="comment">//如果为下面这种：</span></span><br><span class="line">            String s1 = (<span class="keyword">char</span>)a + (<span class="keyword">char</span>)b + (<span class="keyword">char</span>)c + <span class="string">""</span>;</span><br><span class="line">            System.out.println(s1);</span><br><span class="line">            <span class="comment">//就是先转为编码再相加（作为数字运算），输出为65458</span></span><br><span class="line">        }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>字符串还有一个很重要的特性，那就是<strong>不可变性</strong>。</p><p>什么意思呢？看下面这个实例：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringTest_NonChange</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">            String s = <span class="string">"Hello"</span>;</span><br><span class="line">            System.out.println(s);<span class="comment">//输出Hello</span></span><br><span class="line">            String t = s;</span><br><span class="line">            s = <span class="string">"World"</span>;</span><br><span class="line">            System.out.println(t);<span class="comment">//输出Hello</span></span><br><span class="line">            System.out.println(s);<span class="comment">//输出World</span></span><br><span class="line">        }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>为什么t没有变成World呢？</p><p>首先，要明白String字符类型在Java中的储存方式，当生成一个字符串s，并指向一个”Hello”的内容时，他是这样的：</p><p><img src="https://i.loli.net/2021/07/25/RQPr4BFAKdfiISJ.png" alt="image-20210725170556389"></p><p>然后，Java根据通过方法和s的地址在堆中找到s对应的字符串，输出；</p><p>t被赋给了s，t所拥有的，被赋予的是s的什么呢？是指向s的地址，是栈里面的内容，而不是直接指向堆中对象。</p><p>所以，s再次在堆中创建”World”，引用时产生新地址，这个时候t仍然等于s的旧地址，原来在堆中的字符串”Hello”还在，但是无法通过变量s来访问了，因为s有了新的指向内容：</p><p><img src="https://i.loli.net/2021/07/25/XkAzPaNmjCdl36p.png" alt="image-20210725171846575"></p><p>所以，一旦String对象在内存中创建，它将是不可改变的，所有的String类方法并不是改变String对象自己，二是创建了一个新的String对象。</p><p>此时运行</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">boolean</span> judgeMethod = (s==t);</span><br><span class="line">    System.out.println(judgeMethod? <span class="string">"True"</span> : <span class="string">"False"</span>);</span><br><span class="line"><span class="comment">//输出false</span></span><br></pre></td></tr></tbody></table></figure><p>正因为String对象不可变，如果需要对字符串进行大量的修改、添加、删除的时候，尽量不要使用String对象，这样会频繁的创建新字符串导致系统效率降低，这时可以使用字符串生成器StringBuilder。</p><p>引用变量的类型可以指向一个**空值<code>null</code>**，表示不存在，即该变量不指向任何对象。</p><p>空字符串是一个有效的字符串对象，不等于<code>null</code>！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;昨天安装了一下最新版本的Java，大概是JavaSE16？然后写一下Windows系统里环境变量的配置方法。&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="JDK环境变量配置" scheme="https://jinzhen-lee.github.io/tags/JDK%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/"/>
    
    <category term="Java运算学习" scheme="https://jinzhen-lee.github.io/tags/Java%E8%BF%90%E7%AE%97%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="字符串引用" scheme="https://jinzhen-lee.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BC%95%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>关于Java中基础知识的补充学习</title>
    <link href="https://jinzhen-lee.github.io/2021/07/24/20210724-java%E5%AD%A6%E4%B9%A0/"/>
    <id>https://jinzhen-lee.github.io/2021/07/24/20210724-java%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-07-24T06:13:04.000Z</published>
    <updated>2021-07-27T07:18:19.473Z</updated>
    
    <content type="html"><![CDATA[<p>事实证明，基础打不好，后期的学习都是空中楼阁……很多概念性的东西看不懂，代码读不出内容，无法理解的自然也写不出来，所以今天补充基本概念的学习。</p><p>昨天学习了JVM和JMM的一些内容，JVM就是Java在运行时候的内存空间，分为栈（Stack）、堆（Heap）和方法区，一段代码在执行过程中引用的方法在栈中形成一个帧栈，一个线程的执行就是从入栈到出栈的过程，帧栈属于虚拟机栈，分为局部变量、操作栈、动态连接和方法返回地址四个部分。</p><span id="more"></span><p>对于一条线程的具体执行方法，看了很多文件但是还是不太理解，故而先放下，不死抠了，等多了解一些再回头看也许就看的懂了。</p><p>Java之所以可以在不同的操作系统执行同一段代码，是因为JVM这个转换器，将Java的源码转换为了当前平台可运行的Java字节码，并且即使Java进行了更新，低版本的代码依旧可以在高版本上运行，高低版本是兼容的。也就是说不同版本的Java源码相同，不一样的是JVM，因为JVM是转换源码的工具。</p><p>在一段代码中，先确定一个类→方法→[执行代码→定义变量]</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> staic <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{</span><br><span class="line">            System.out.println(<span class="string">"Hello,world!"</span>);</span><br><span class="line">        }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在上面那段代码中，class是类，Hello是类名，首字母大写，尽量有含义，可以和数字、_、$一起使用，不能含有空格。</p><p>public意思是公开，这是一段对所有用户开放的，里面的内容可以被其他人调用。</p><p>static是成员变量，或者叫静态变量，目前粗浅的理解一点，就是static是一个可以全局使用的变量，Java作为一个面向对象的语言，本来不应该存在这种在全局都通用的变量的，但是static可以实现，如何实现呢？大概的方法就是在一个Demo1中定义一个static变量i，并且使用方法getNumber()返回i，在第二个类Demo2中，想要得到Demo1中静态的i，直接类名引用就好了：int i = Demo1.i;</p><p>具体过程如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先创建方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>{}</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> i;<span class="comment">//返回的是全局变量的i</span></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后再新建一个class</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> i = Hello.i;</span><br><span class="line">        <span class="comment">//想要得到Hello中的静态变量i，直接类名引用即可</span></span><br><span class="line">System.out.println(i);</span><br><span class="line">        <span class="comment">//输出结果会根据被引用的变量更改而更改</span></span><br><span class="line"><span class="keyword">int</span> ii = Hello.getNumber();</span><br><span class="line">        <span class="comment">//还可以直接根据类名调用方法</span></span><br><span class="line">System.out.println(ii);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//以上两个输出的结果都是5</span></span><br><span class="line"><span class="comment">//当Hello中的i被更改时，后面的输出结果也随之改变</span></span><br></pre></td></tr></tbody></table></figure><p>说完了static，接下来是void。</p><p>void就是空，Java作为面向对象，最终一定要有一个返回值，而在第一句加上<code>public static void mai(String [] args){}</code>就代表“空”，即“什么都不返回”，如果在一个方法中不需要返回值，就可以使用void关键字。</p><p>关于void还有一些Void的知识，但是封装类型还没有接触，所以暂时先了解这么多。</p><p>main()表示方法，Java程序的固定入口方法是<code>public static void main(String [] args){}</code>，都是从main执行的。</p><p>然后进入方法里面以后，就会产生变量。</p><p>变量在使用前必须声明，格式为：数据类型 变量名（给变量赋值）；</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a,b,c;<span class="comment">//声明三个int型整数：a、b、c，多个同类型变量用逗号隔开</span></span><br><span class="line"><span class="keyword">int</span> d = <span class="number">3</span>,e = <span class="number">4</span>, f = <span class="number">5</span>;<span class="comment">//声明三个int型整数并赋值</span></span><br><span class="line"><span class="keyword">int</span> g;<span class="comment">//不写初始值，默认为0</span></span><br></pre></td></tr></tbody></table></figure><p>变量有两种类型，基本数据变量和引用变量。</p><p>基本数据类型有八种，可分为四大类：整型（byte、int，short、long）、浮点型（float、double）、布尔型（Boolean）和字符类型（char）。不同类型占用的字节数不一样：</p><p>byte：         □</p><p>short：       □□</p><p>char：         □□</p><p>int：            □□□□</p><p>float：        □□□□</p><p>long：        □□□□□□□□</p><p>double：    □□□□□□□□</p><p>一般变量在被定义的作用域内才会有效，一旦出了作用域就不能使用（static定义的变量需要引用类名），变量的作用域尽量定义的小，且不要重复变量名。</p><p>关于对象、类、方法、变量的一些学习和理解就到这里，明天继续！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;事实证明，基础打不好，后期的学习都是空中楼阁……很多概念性的东西看不懂，代码读不出内容，无法理解的自然也写不出来，所以今天补充基本概念的学习。&lt;/p&gt;
&lt;p&gt;昨天学习了JVM和JMM的一些内容，JVM就是Java在运行时候的内存空间，分为栈（Stack）、堆（Heap）和方法区，一段代码在执行过程中引用的方法在栈中形成一个帧栈，一个线程的执行就是从入栈到出栈的过程，帧栈属于虚拟机栈，分为局部变量、操作栈、动态连接和方法返回地址四个部分。&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java基础" scheme="https://jinzhen-lee.github.io/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
    <category term="关键字含义" scheme="https://jinzhen-lee.github.io/tags/%E5%85%B3%E9%94%AE%E5%AD%97%E5%90%AB%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>关于JVM和内存回收的一点学习</title>
    <link href="https://jinzhen-lee.github.io/2021/07/23/20210723/"/>
    <id>https://jinzhen-lee.github.io/2021/07/23/20210723/</id>
    <published>2021-07-23T06:05:06.000Z</published>
    <updated>2021-07-27T04:02:41.289Z</updated>
    
    <content type="html"><![CDATA[<p>今天开始补充学习一些Java的基础知识，对于计算机相关的基础内容要多多补充学习，不然越学越迷茫了。</p><h2 id="Java中自动回收内存空间"><a href="#Java中自动回收内存空间" class="headerlink" title="Java中自动回收内存空间"></a>Java中自动回收内存空间</h2><p>根据在菜鸟教程里对Java的学习，看到了Java有回收内存空间的功能，所以针对回收和内存两个方面进行了一点了解。</p><span id="more"></span><p>JVM里面的内存有栈、堆、程序计数器、元数据库（Java8后更新）等，栈分为本地方法栈和虚拟机栈，这两者都在回收的列表里。</p><p>栈里主要是不同类运行的方法和线程，堆中是各种变量、对象、常量，主要分为新生代和老年代，两者回收方法不同。针对堆和栈有以下几个注意点：</p><p>①本地变量（局部变量）出现在方法中，在方法中定义，所以存在于栈里，如果他指向一个对象的引用，那么变量仍然在线程栈，但是对象在堆中；</p><p>②一个对象，可能会包含方法，但是仍然存放在堆中；</p><p>③成员变量（存储在堆内存的对象中）随着对象一起储存在堆中，不管是什么类型。</p><p>④变量分为成员变量和局部变量，成员又叫全局变量，是一种定义在类中，方法体之外的变量，涵盖的内容多范围大，而局部变量是在方法内定义的，方法结束后销毁；</p><p>⑤成员变量在栈（方法）外，但是可以被调用，不过依旧存放在堆区；</p><p>⑥每一个放在堆上的对象，可以被持有对这个对象引用的线程访问，也可以访问这个对象的成员变量，如果同时被两个线程访问，每个线程都会拥有这个本地变量的拷贝。</p><p>在这个内存机制下，线程之间的通信不是直接进行的，而是线程A先将内容写入到主内存，然后主内存再传递给线程B，在这里设计到多线程协议，如果多个线程对同一个变量进行更改，会通过协议来进行合理的分配。</p><p>插一条关于CPU内存读取的知识：</p><p>CPU&lt;—-&gt;寄存&lt;—-&gt;缓存（一二三级）&lt;—&gt;内存</p><p>所以CPU读取缓存是比内存快的，如果缓存够大，那么电脑速度也会大大提升。</p><p>那么Java对于垃圾的清理是怎么进行的呢？</p><p>首先要明确一下对于垃圾的定义，什么样的会被回收呢？</p><p>在JVM当中，存在程序计数器、虚拟机栈、本地方法栈，这几个区域跟随线程的存在或者销毁，所以不存在回收或者不需要过多考虑，主要的回收是集中在对于Java方法区和堆区的。</p><p>什么时候回收？当存放的对象不会再次使用时进行回收，下面有四种情况判定回收：</p><p>1、引用计数</p><p>给一个对象添加计数器，如果这个对象不会再被引用，就证明已经无用可以回收，但是在这种情况下要注意相互引用的NULL值，虽然也被引用，但是内容也无法被实际访问，不过却因为引用次数不为0而无法回收。</p><p>2、可达性分析</p><p>通过GC Roots对节点进行搜索，搜索所经过的路径为引用链，如果没有任何引用，证明对象不可达，则该对象已死。</p><p>在Java中，可作为GC RootsDE 的对象包括：</p><ul><li>虚拟机栈中引用对象</li><li>方法区中静态属性引用对象</li><li>方法区中常量引用对象</li><li>Native方法引用对象（为空）</li></ul><p>3、对象的自我拯救</p><p>使用了finalize方法，但是只能用一次</p><p>4、方法区回收</p><p>废弃的常量和无用的类，无用的类包括无对象、class已回收和class无引用</p><p>那么，如何进行回收呢？回收的方法根据对象分为两种：新生代和老年代，新生代主要是用复制算法，老年代使用标记-清除算法或者标记-整理算法。</p><p>新生代中的对象98%是朝生夕死，所以将内存划分为Eden和两块较小的Survivor空间，每次使用一块Eden和Survivor，将两块空间还存活的对象复制到另一块Survivor上，再一次性清除两块上的内容。比例是8 : 1 : 1 。</p><p>但是大对象应当直接分配到老年代。</p><p>在进行清理时要注意几点：</p><p>①对象优先在新生区的Eden进行分配；</p><p>②大对象直接进入老年代；</p><p>③长期存活的对象进入老年代；</p><p>不过需要注意的是，Java的内存回收是Java系统自动进行的内容，哪怕写入程序进行干扰，也不一定会立刻执行，但是却是可以用以下编程来影响回收：</p><p>①无用对象赋值为null；</p><p>②对一个数值重新赋值（上一个只会被回收）；</p><p>③互相为null（循环）；</p><p>④使用System.gc (  )；（执行时间不一定）</p><p>然后放一道关于虚拟内存和物理内存的题目，今天其实也看了一些相关内容，但是搞的不是很明白，明天再仔细看看然后写一下笔记和解答过程。</p><p>某计算机存储器按字节编址，虚拟（逻辑）地址空间大小为16MB，主存（物理）地址空间大小为1MB，页面大小为4KB；</p><p>问：虚拟地址共有几位，哪几位表示虚页号？物理地址共有几位，哪几位表示页框号（物理页号）？</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天开始补充学习一些Java的基础知识，对于计算机相关的基础内容要多多补充学习，不然越学越迷茫了。&lt;/p&gt;
&lt;h2 id=&quot;Java中自动回收内存空间&quot;&gt;&lt;a href=&quot;#Java中自动回收内存空间&quot; class=&quot;headerlink&quot; title=&quot;Java中自动回收内存空间&quot;&gt;&lt;/a&gt;Java中自动回收内存空间&lt;/h2&gt;&lt;p&gt;根据在菜鸟教程里对Java的学习，看到了Java有回收内存空间的功能，所以针对回收和内存两个方面进行了一点了解。&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="JVM相关" scheme="https://jinzhen-lee.github.io/tags/JVM%E7%9B%B8%E5%85%B3/"/>
    
    <category term="内存回收" scheme="https://jinzhen-lee.github.io/tags/%E5%86%85%E5%AD%98%E5%9B%9E%E6%94%B6/"/>
    
  </entry>
  
  <entry>
    <title>20210721的学习日常</title>
    <link href="https://jinzhen-lee.github.io/2021/07/21/20210721-learning/"/>
    <id>https://jinzhen-lee.github.io/2021/07/21/20210721-learning/</id>
    <published>2021-07-21T01:14:38.000Z</published>
    <updated>2021-07-27T04:01:33.642Z</updated>
    
    <content type="html"><![CDATA[<p>Java今天进入了运算符的学习~</p><span id="more"></span><p><strong>一、赋值运算符</strong></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num1 = <span class="number">10</span>;</span><br><span class="line">num1 += <span class="number">2</span>;<span class="comment">//num1 = num1 + 2;</span></span><br><span class="line">System.out.println(num2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">12</span>;</span><br><span class="line">num2 %= <span class="number">5</span>;<span class="comment">//num2 = num2 % 5;就是用num2对5取余</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> s1 = <span class="number">10</span>;</span><br><span class="line">s1 += <span class="number">2</span>;<span class="comment">//不会改变变量本身的数据类型</span></span><br><span class="line">System.out.println(s1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//开发中，如果希望变量实现+2的操作，有几种方法？（前提 int num = 10）</span></span><br><span class="line"><span class="comment">//方式1：num = num + 2;</span></span><br><span class="line"><span class="comment">//方式2：num += 2;（推荐）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//开发中如果希望变量实现+1的操作，有几种方法？（前提 int num = 10）</span></span><br><span class="line"><span class="comment">//方式1：num = num + 1;</span></span><br><span class="line"><span class="comment">//方式2：num = num += 1;</span></span><br><span class="line"><span class="comment">//方式3：num++;(推荐)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//练习</span></span><br><span class="line"><span class="keyword">int</span> m = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">3</span>;</span><br><span class="line">n *= m++; <span class="comment">//n = n * m++,先运算，后自增</span></span><br><span class="line">System.out.println(<span class="string">"m="</span> + m);<span class="comment">//3</span></span><br><span class="line">System.out.println(<span class="string">"n="</span> + n);<span class="comment">//6</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>要尤其注意一下自增和运算的顺序~还有一个%=的用法，就是用前面的数字对等于后面的数字进行取余。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n = <span class="number">10</span>;</span><br><span class="line">n += (n++) + (++n);<span class="comment">//n = n + (n++) + (++n); </span></span><br><span class="line">System.out.println(n);</span><br><span class="line"><span class="comment">//最后输出是32！</span></span><br></pre></td></tr></tbody></table></figure><p><strong>二、比较运算符</strong></p><p>比较运算符的结果都是boolean型，<strong>也就是要么是true，要么是false。</strong> </p><p>比较运算符“==”不能误写成“=” 。  </p><p><strong>三、逻辑运算符</strong></p><p> &amp;—逻辑与           | —逻辑或           ！—逻辑非 </p><p>&amp;&amp; —短路与       || —短路或          ^ —逻辑异或  </p><p>这几个掰扯的我有点头晕……</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LogicTest</span> </span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//区分&amp;和&amp;&amp;</span></span><br><span class="line"><span class="comment">//相同点1：&amp;和&amp;&amp;的运算结果相同</span></span><br><span class="line"><span class="comment">//相同点2：当符号左边是true时，二者都会执行符号右边的运算</span></span><br><span class="line"><span class="comment">//不同点：当符号左边是false时，&amp;继续执行符号右边的运算，&amp;&amp;不执行</span></span><br><span class="line"><span class="comment">//开发中，推荐使用&amp;&amp;</span></span><br><span class="line"><span class="keyword">boolean</span> b1 = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">int</span> num1 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (b1 &amp; (num1++ &gt; <span class="number">0</span>)){</span><br><span class="line">System.out.println(<span class="string">"check"</span>);</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">System.out.println(<span class="string">"not safe"</span>);</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"num1 = "</span> + num1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> b2 = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (b2 &amp; (num2++ &gt; <span class="number">0</span>)){</span><br><span class="line">System.out.println(<span class="string">"check"</span>);</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">System.out.println(<span class="string">"not safe"</span>);</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"num2 = "</span> + num2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//区分：|与||</span></span><br><span class="line">相同点<span class="number">1</span>：&amp;和&amp;&amp;的运算结果相同</span><br><span class="line"><span class="comment">//相同点1：|和||的运算结果相同</span></span><br><span class="line"><span class="comment">//相同点2：当符号左边是false时，二者都会执行符号右边的运算</span></span><br><span class="line"><span class="comment">//不同点：当符号左边是true时，|继续执行符号右边的运算，||不执行</span></span><br><span class="line"><span class="comment">//开发中，推荐使用||</span></span><br><span class="line"><span class="keyword">boolean</span> b3 = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">int</span> num3 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (b3 | (num3++ &gt; <span class="number">0</span>)){</span><br><span class="line">System.out.println(<span class="string">"check"</span>);</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">System.out.println(<span class="string">"not safe"</span>);</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"num3 = "</span> + num3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> b4 = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">int</span> num4 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (b4 || (num4++ &gt; <span class="number">0</span>)){</span><br><span class="line">System.out.println(<span class="string">"check"</span>);</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">System.out.println(<span class="string">"not safe"</span>);</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"num4 = "</span> + num4);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//一道面试题</span></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String [] args)</span> </span>{</span><br><span class="line"><span class="keyword">boolean</span> x=<span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">boolean</span> y=<span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">short</span> z=<span class="number">42</span>;</span><br><span class="line"><span class="comment">//if(y == true)</span></span><br><span class="line"><span class="keyword">if</span>((z++==<span class="number">42</span>)&amp;&amp;(y=<span class="keyword">true</span>))z++;<span class="comment">//44</span></span><br><span class="line"><span class="keyword">if</span>((x=<span class="keyword">false</span>) || (++z==<span class="number">45</span>)) z++;<span class="comment">//46</span></span><br><span class="line"></span><br><span class="line"> System. out.println(“z=”+z);</span><br><span class="line">}</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><p><strong>四、位运算符</strong></p><p>位运算是直接对整数的二进制进行的运算</p><p><img src="https://i.loli.net/2021/07/21/uBETAlHrCiUgZkD.png" alt="image-20210721143302544"></p><p>1.位运算符操作的都是整型的数据【左乘右除】</p><p><code>&lt;&lt;</code>:在一定范围内，每向左移一位，相当于 * 2</p><p><code>&gt;&gt;</code>:在一定范围内，每向右移一位，相当于 / 2</p><p><strong>面试题：</strong></p><p>最高效计算2 * 8？</p><p>答：2&lt;&lt;3 或 8&gt;&gt;1</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//练习:交换两个变量的值</span></span><br><span class="line"><span class="keyword">int</span> num1 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*方式一：定义临时变量</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">int temp = num1;</span></span><br><span class="line"><span class="comment">num1 = num2;</span></span><br><span class="line"><span class="comment">num2 = temp;</span></span><br><span class="line"><span class="comment">System.out.println("num1 = "+ num1 + "num2 = " + num2);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*方式二：好处：不用定义临时变量</span></span><br><span class="line"><span class="comment">弊端：相加操作可能超出存储范围；有局限性：只能适用于数值类型</span></span><br><span class="line"><span class="comment">num1 = num1 + num2;</span></span><br><span class="line"><span class="comment">num2 = num1 - num2;</span></span><br><span class="line"><span class="comment">num1 = num1 - num2;</span></span><br><span class="line"><span class="comment">System.out.println("num1 = "+ num1 + "num2 = " + num2);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*方法三：使用位运算符</span></span><br><span class="line"><span class="comment">有局限性，只能适用于数值类型</span></span><br><span class="line"><span class="comment">num1 = num1 ^ num2;</span></span><br><span class="line"><span class="comment">num2 = num1 ^ num2;</span></span><br><span class="line"><span class="comment">num1 = num2 ^ num1;</span></span><br><span class="line"><span class="comment">System.out.println("num1 = "+ num1 + "num2 = " + num2);</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure><p><strong>三元运算符</strong></p><p><img src="https://i.loli.net/2021/07/21/Bj1Hy7OY3GEZ4q2.png" alt="image-20210721151820315"></p><p>​                结构：</p><p>​                    (条件表达式)? 表达式:表达式2</p><p>​                说明：</p><p>​                ①条件表达式的结果为boolean类型</p><p>​                ②根据表达式的真或假，决定表示式1还是2</p><p>​                ③表达式1和表达式2要求是一致的（同一类型）</p><p>​                结论：</p><p>​                凡是可以使用三元运算符的地方，都可以改写为if-else</p><p>​                如果程序既可以使用三元运算符又可以使用if-else结构，那么优先选择三元运算符。<br>​                原因：简洁，执行效率高</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取两个整数的较大值</span></span><br><span class="line"><span class="keyword">int</span> m = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">int</span> n =<span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> max = (m&gt;n)? m:n;</span><br><span class="line"></span><br><span class="line">System.out.println(max);</span><br><span class="line">String maxStr = (m &gt; n)? <span class="string">"m大"</span>:((m == n)? <span class="string">"m和n相等"</span>:<span class="string">"n大"</span>);</span><br><span class="line">System.out.println(maxStr);</span><br><span class="line"><span class="comment">//三元运算符可以嵌套使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取三个数中的最大值</span></span><br><span class="line"><span class="keyword">int</span> n1 = <span class="number">17</span>;</span><br><span class="line"><span class="keyword">int</span> n2 = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">int</span> n3 = -<span class="number">74</span>;</span><br><span class="line"><span class="comment">//思路：先用两个数进行比较，然后用比出来较大的数跟第三个数比较</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxSec = (n1 &gt; n2)? n1 : n2;</span><br><span class="line"><span class="keyword">int</span> maxFir = (maxSec &gt; n3)? maxSec : n3;</span><br><span class="line">System.out.println(maxFir);</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>找到了一个学习打字的网站，打的好痛苦，第一次发现打字也是这么痛苦的事情！</p><p>不过为了盲打，我拼了！</p><p>网址贴上，不用注册也可以用，感觉相比之下还算有趣的打字网站</p><p><a href="https://www.typing.com/student/lessons">Typing Lessons - Learn To Type And Improve Typing Speed Free - Typing.com</a></p><p>然后用复习一下mysql的题目……</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Java今天进入了运算符的学习~&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java基础" scheme="https://jinzhen-lee.github.io/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Java运算符" scheme="https://jinzhen-lee.github.io/tags/Java%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>力扣上几道关于mysql的练习题+mysql补充内容的学习</title>
    <link href="https://jinzhen-lee.github.io/2021/07/20/mysql-learning/"/>
    <id>https://jinzhen-lee.github.io/2021/07/20/mysql-learning/</id>
    <published>2021-07-20T02:59:18.000Z</published>
    <updated>2021-07-27T04:01:53.930Z</updated>
    
    <content type="html"><![CDATA[<p>学完尚硅谷的mysql基本内容，真的是学点忘点……创建函数和存储过程那里明明是最后才学的，但是却忘得最快，难顶</p><p>今天把笔记翻出来又复习了一遍，好多函数都要记不得了（甚至没有学过的印象！哭</p><span id="more"></span><p>下面是我语雀的笔记~（更改了权限，应该都可见</p><p><a href="https://www.yuque.com/bijianmo/gmp9uu/ea6xam">MySQL基础 · 语雀 (yuque.com)</a></p><p>在力扣上的练习题：</p><p>数据库175题：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> FirstName, LastName, City, State</span><br><span class="line"><span class="keyword">from</span> Person p</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Address a</span><br><span class="line"><span class="keyword">on</span> p.PersonId <span class="operator">=</span> a.PersonId;</span><br><span class="line"></span><br><span class="line">#简单的外连接，但是要注意主表是Person，就是使用人来匹配地址，如果没有地址就是<span class="keyword">NULL</span>，但是不能用地址来匹配人</span><br></pre></td></tr></tbody></table></figure><p>176.第二高的薪水</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> (</span><br><span class="line">        ifnull(</span><br><span class="line">            (<span class="keyword">select</span> <span class="keyword">distinct</span> Salary</span><br><span class="line">            <span class="keyword">from</span> Employee</span><br><span class="line">            <span class="keyword">order</span> <span class="keyword">by</span> Salary <span class="keyword">desc</span></span><br><span class="line">            limit <span class="number">1</span> <span class="keyword">offset</span> <span class="number">1</span>), <span class="keyword">null</span></span><br><span class="line">            #limit <span class="number">1</span> <span class="keyword">offset</span> <span class="number">1</span>的意思是，跳过第一条数据，从第二条数据开始取，取一条</span><br><span class="line">            #还可以写作limit <span class="number">1</span>,<span class="number">1</span>；同样的意思</span><br><span class="line">        )</span><br><span class="line">)</span><br><span class="line"><span class="keyword">as</span> SecondHighestSalary;</span><br></pre></td></tr></tbody></table></figure><p>177.第N高的薪水</p><p>这个应用到了函数，但是他要写的是一条SQL语句，可恶，狠狠地又去恶补了一下各种变量和函数的写法QvQ</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> getNthHighestSalary(N <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    </span><br><span class="line">  <span class="keyword">RETURN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> IF(COUNT<span class="operator">&lt;</span>N,<span class="keyword">NULL</span>,min)#如果排行出来的结果小于输入的值，则没有结果输出<span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">FROM</span>(</span><br><span class="line">            <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(Salary) min,<span class="built_in">COUNT</span>(<span class="number">1</span>) count</span><br><span class="line">        #最小的就是第N高的工资，count（<span class="number">1</span>）和count（<span class="operator">*</span>）的作用一样，显示的都是所有行</span><br><span class="line">            <span class="keyword">FROM</span>(</span><br><span class="line">                    <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Salary </span><br><span class="line">                    <span class="keyword">FROM</span> Employee</span><br><span class="line">                    <span class="keyword">ORDER</span> <span class="keyword">BY</span> Salary <span class="keyword">DESC</span></span><br><span class="line">                    LIMIT N</span><br><span class="line">            ) <span class="keyword">AS</span> a#选出按照工资去重排行的，从高到低的第N高前面的所有内容</span><br><span class="line">    </span><br><span class="line">    ) <span class="keyword">AS</span> b   </span><br><span class="line">  );</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></tbody></table></figure><p>178.分数排名</p><p>这里用的是变量来做，属于自连接里面的不等值连接。据说mysql8.0版本升级了新的内置函数库，可以直接用函数库做了- -</p><p>题目：编写一个 SQL 查询来实现分数排名。</p><p>如果两个分数相同，则两个分数排名（Rank）相同。请注意，平分后的下一个名次应该是下一个连续的整数值。换句话说，名次之间不应该有“间隔”。</p><figure class="highlight gherkin"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+----+-------+</span><br><span class="line">|<span class="string"> Id </span>|<span class="string"> Score </span>|</span><br><span class="line">+----+-------+</span><br><span class="line">|<span class="string"> 1  </span>|<span class="string"> 3.50  </span>|</span><br><span class="line">|<span class="string"> 2  </span>|<span class="string"> 3.65  </span>|</span><br><span class="line">|<span class="string"> 3  </span>|<span class="string"> 4.00  </span>|</span><br><span class="line">|<span class="string"> 4  </span>|<span class="string"> 3.85  </span>|</span><br><span class="line">|<span class="string"> 5  </span>|<span class="string"> 4.00  </span>|</span><br><span class="line">|<span class="string"> 6  </span>|<span class="string"> 3.65  </span>|</span><br><span class="line">+----+-------+</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s1.Score,<span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> s2.Score) <span class="keyword">AS</span> `rank`</span><br><span class="line"><span class="keyword">FROM</span> Scores s1, Scores s2</span><br><span class="line"><span class="keyword">WHERE</span> s1.Score <span class="operator">&lt;=</span> s2.Score</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> s1.Id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> s1.Score <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure><p>这道题实在有些地方想的不明白，所以就用SQLyog来创建图表试了一下</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#创建表格</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> Scores(</span><br><span class="line"></span><br><span class="line">Id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">Score <span class="keyword">DOUBLE</span>(<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>表里面的分数是浮点型，就使用了double，double（a,b）的含义是：a指定指定小数点左边和右边可以存储的十进制数字的最大个数，b指定小数点右边可以存储的十进制数字的最大个数，小数位数必须是从 0 到 a之间的值。默认小数位数是 0。</p><p>简单来讲，a是加上小数点前后所有位数总和，b是小数位数</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#插入数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Scores(Id, Score)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">3.50</span>),(<span class="number">2</span>,<span class="number">3.65</span>),(<span class="number">3</span>,<span class="number">4.00</span>),(<span class="number">4</span>,<span class="number">3.85</span>),(<span class="number">5</span>,<span class="number">4.00</span>),(<span class="number">6</span>,<span class="number">3.65</span>);</span><br><span class="line"></span><br><span class="line">#进行查询</span><br><span class="line"><span class="keyword">SELECT</span> s1.Score,<span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> s2.Score) <span class="keyword">AS</span> `rank`</span><br><span class="line"><span class="keyword">FROM</span> Scores s1, Scores s2</span><br><span class="line"><span class="keyword">WHERE</span> s1.Score <span class="operator">&lt;=</span> s2.Score</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> s1.Id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> s1.Score <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure><p>180.马一下，连答案都看不懂（</p><p>编写一个 SQL 查询，查找所有至少连续出现三次的数字。</p><p>返回的结果表中的数据可以按 <strong>任意顺序</strong> 排列。</p><p> 181.给定 <code>Employee</code> 表，编写一个 SQL 查询，该查询可以获取收入超过他们经理的员工的姓名。在上面的表格中，Joe 是唯一一个收入超过他的经理的员工。（so easy</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> e.Name <span class="keyword">AS</span> `Employee`</span><br><span class="line"><span class="keyword">FROM</span> Employee e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> employee m</span><br><span class="line"><span class="keyword">ON</span> e.ManagerId <span class="operator">=</span> m.Id</span><br><span class="line"><span class="keyword">WHERE</span> e.Salary <span class="operator">&gt;=</span> m.Salary;</span><br></pre></td></tr></tbody></table></figure><p>182.查找重复的电子邮件</p><p>一共有三种方法~</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#聚合函数</span><br><span class="line"><span class="keyword">SELECT</span> email</span><br><span class="line"><span class="keyword">FROM</span> Person</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> email</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(email)<span class="operator">&gt;</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">#自连接</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> p1.email</span><br><span class="line"><span class="keyword">FROM</span> person p1</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> person p2</span><br><span class="line"><span class="keyword">ON</span> p1.email <span class="operator">=</span> p2.email</span><br><span class="line"><span class="keyword">AND</span> p1.Id <span class="operator">!=</span> p2.Id;</span><br><span class="line"></span><br><span class="line">#创建视图<span class="keyword">or</span>子表查询</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myv1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> t,email</span><br><span class="line"><span class="keyword">FROM</span> Person</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> email;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> email </span><br><span class="line"><span class="keyword">FROM</span> myv1</span><br><span class="line"><span class="keyword">WHERE</span> myv1.t <span class="operator">&gt;</span> <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure><p>救命一天才搞了这么几道题（</p><p>好好复习我的mysql基础了要，用户变量那完全无法理解……OTZ</p><p>以及一天没有进展的Java课程，头秃了</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;学完尚硅谷的mysql基本内容，真的是学点忘点……创建函数和存储过程那里明明是最后才学的，但是却忘得最快，难顶&lt;/p&gt;
&lt;p&gt;今天把笔记翻出来又复习了一遍，好多函数都要记不得了（甚至没有学过的印象！哭&lt;/p&gt;</summary>
    
    
    
    <category term="mysql学习" scheme="https://jinzhen-lee.github.io/categories/mysql%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="mysql习题" scheme="https://jinzhen-lee.github.io/tags/mysql%E4%B9%A0%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>20210716的Java学习内容</title>
    <link href="https://jinzhen-lee.github.io/2021/07/16/20210716learning/"/>
    <id>https://jinzhen-lee.github.io/2021/07/16/20210716learning/</id>
    <published>2021-07-16T09:10:38.000Z</published>
    <updated>2021-07-27T04:00:48.827Z</updated>
    
    <content type="html"><![CDATA[<p>学习Java的课程是尚硅谷的三十天掌握Java核心，目前进度缓慢哈哈哈</p><p>今天的学习内容：</p><p>（下面全是代码块，所以从这里切掉）</p><span id="more"></span><figure class="highlight arduino"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类名每个单词开头字母大写</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VariablesTest</span></span></span><br><span class="line"><span class="class">{</span><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span> [] args)</span></span>{</span><br><span class="line"><span class="keyword">int</span> myAge = <span class="number">23</span>;</span><br><span class="line"><span class="comment">//变量的定义</span></span><br><span class="line"><span class="comment">//变量名第一个单词小写，第二个开始大写</span></span><br><span class="line">System.out.<span class="built_in">println</span>(myAge);</span><br><span class="line"><span class="comment">//变量的声明</span></span><br><span class="line"><span class="keyword">int</span> myNumber;</span><br><span class="line"><span class="comment">//变量的赋值</span></span><br><span class="line">myNumber = <span class="number">2343</span>;</span><br><span class="line"></span><br><span class="line">System.out.<span class="built_in">println</span>(myNumber);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">变量使用前要先声明且赋值才能输出</span></span><br><span class="line"><span class="comment">1.Java定义变量的格式：数据类型 变量名 = 变量值；</span></span><br><span class="line"><span class="comment">2.变量必须先声明，然后才能使用</span></span><br><span class="line"><span class="comment">3.变量都定义在其作用域内，在作用域内，是有效的</span></span><br><span class="line"><span class="comment">4.同一个作用域内不可以声明两个同名的变量</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">注：作用域就是定义变量的大括号内的文字</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>上面是一些关于变量的学习内容，然后是不同变量的分类和数据之间的详细讲解</p><p>数据分为以下几种：</p><p><img src="https://i.loli.net/2021/07/16/9CSo61H8XkLulUD.png" alt="image-20210716171743332"></p><figure class="highlight pgsql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">java定义的数据类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">一、按照数据类型来分</span></span><br><span class="line"><span class="comment">基本数据类型：</span></span><br><span class="line"><span class="comment">整型：byte、short、int、long</span></span><br><span class="line"><span class="comment">浮点型：float、double</span></span><br><span class="line"><span class="comment">字符型：char</span></span><br><span class="line"><span class="comment">布尔型：boolean</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">引用数字类型：类class、接口inerface、数组array[]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">二、变量在类中声明的位置</span></span><br><span class="line"><span class="comment">成员变量 vs 局部变量</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> VariablesTest1 </span><br><span class="line">{</span><br><span class="line"><span class="built_in">public</span> static <span class="type">void</span> main(String[] args) </span><br><span class="line">{<span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.整型：byte（1字节 = 8bit）、int（4字节）、long（8字节）、short（2字节）</span></span><br><span class="line"><span class="comment">①byte范围：-128 - 127</span></span><br><span class="line"><span class="comment">byte超过128会编译不通过</span></span><br><span class="line"><span class="comment">②long型变量必须以大写L或者小写l结尾</span></span><br><span class="line"><span class="comment">③通常定义整型变量使用int型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.浮点型</span></span><br><span class="line"><span class="comment">float：单精度，位数精确到7（4字节）</span></span><br><span class="line"><span class="comment">double：双精度，精度是float的两倍，通常采用此类型（8字节）</span></span><br><span class="line"><span class="comment">①浮点型标示带小数点的数值</span></span><br><span class="line"><span class="comment">②float表示数值的范围比long还大</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">123.546</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">System</span>.<span class="keyword">out</span>.println(d1);</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">5.5448</span>F;</span><br><span class="line">//<span class="type">float</span>类型定义变量值末尾要以f或者F结尾 </span><br><span class="line"><span class="keyword">System</span>.<span class="keyword">out</span>.println(f1);</span><br><span class="line">//通常定义浮点型变量时使用<span class="type">double</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//<span class="number">3.</span>字符类型：<span class="type">char</span>（<span class="number">1</span>字符 = <span class="number">1</span>字节）</span><br><span class="line">//①定义<span class="type">char</span>型变量使用一对单引号<span class="string">''</span>，内部只能写一个字符</span><br><span class="line"><span class="type">char</span> c1 = <span class="string">'a'</span>;</span><br><span class="line">//<span class="type">char</span> c1 = <span class="string">'abc'</span></span><br><span class="line">//编译不通过</span><br><span class="line">//<span class="keyword">summary</span>.java:<span class="number">49</span>: 错误: 未结束的字符文字</span><br><span class="line"><span class="keyword">System</span>.<span class="keyword">out</span>.println(c1);</span><br><span class="line"></span><br><span class="line">//②表示方式：<span class="number">1.</span>声明一个字符<span class="number">2.</span>转义字符<span class="number">3.</span>使用Unicode值来表示字符型常量</span><br><span class="line"><span class="type">char</span> c5 = <span class="string">'\n'</span>;//换行符</span><br><span class="line">c5 = <span class="string">'\t'</span>;//制表符</span><br><span class="line"><span class="keyword">System</span>.<span class="keyword">out</span>.println("hello" + c5);</span><br><span class="line"><span class="keyword">System</span>.<span class="keyword">out</span>.println("world");</span><br><span class="line"></span><br><span class="line">//<span class="number">4.</span>布尔：<span class="type">boolean</span></span><br><span class="line">//①只能取两个值之一：<span class="keyword">true</span>、<span class="keyword">false</span></span><br><span class="line"><span class="type">boolean</span> bbl = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">System</span>.<span class="keyword">out</span>.println(bbl);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>了解了数据之间的具体差别之后，数据与数据之间还可以进行运算，但是遵循一些规则</p><figure class="highlight arduino"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">基本数据类型之间的运算规则：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">前提：只讨论7种基本数据类型变量间的运算，不包含布尔</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.自动类型提升：</span></span><br><span class="line"><span class="comment">当容量小的数据类型的变量与容量大的数据类型的变量做运算时，结果自动提升为容量多大的类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">byte、char、short--&gt;int--&gt;long--&gt;float--&gt;double</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">特殊：当byte、char、short做运算时，结果为int类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.强制类型转换：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">说明：容量大小指的是，表示数的范围的大和小</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VariableTest2</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> </span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span> b1 = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> i1 = <span class="number">35</span>;</span><br><span class="line"><span class="keyword">int</span> i2 = b1 + i1;</span><br><span class="line"><span class="comment">//结果应该用范围大的类型</span></span><br><span class="line">System.out.<span class="built_in">println</span>(i2);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>今天的学习内容就这么点……有些少，最近要准备买几本Java的书开始看，今天是雷暴雨天气，早点写完早早回家~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;学习Java的课程是尚硅谷的三十天掌握Java核心，目前进度缓慢哈哈哈&lt;/p&gt;
&lt;p&gt;今天的学习内容：&lt;/p&gt;
&lt;p&gt;（下面全是代码块，所以从这里切掉）&lt;/p&gt;</summary>
    
    
    
    <category term="Java学习" scheme="https://jinzhen-lee.github.io/categories/Java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java基础" scheme="https://jinzhen-lee.github.io/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>今天对博客做的一系列更新改动以及配置方法来源</title>
    <link href="https://jinzhen-lee.github.io/2021/07/15/new-changes/"/>
    <id>https://jinzhen-lee.github.io/2021/07/15/new-changes/</id>
    <published>2021-07-15T08:38:51.000Z</published>
    <updated>2021-07-27T06:17:52.117Z</updated>
    
    <content type="html"><![CDATA[<p>今天上午经历了崩溃的报错修改过程……学到的唯一一件事：如果改了主题配置文件or其他css文件夹下其他代码中的什么设置，然后出现疯狂报错的情况，直接删号重来吧（不是</p><p>反正最后的解决方法就是删了主题文件重装了一遍，万事大吉了OTZ</p><p>今天对博客的美化内容有：</p><span id="more"></span><p>①增加背景线条互动动画</p><p><a href="https://zhuanlan.zhihu.com/p/69211731">Hexo 博客美化合集（不断更新） - 知乎 (zhihu.com)</a></p><p>注意添加代码的文件在\hexo\themes\next\layout\_layout.njk，文件名和文章里讲的稍微有点不同，但是代码复制内容还是可以用的！打开之后使用VSC编辑，添加以下代码块：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--动态线条背景--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></span><br><span class="line"><span class="tag"><span class="attr">color</span>=<span class="string">"220,220,220"</span> <span class="attr">opacity</span>=<span class="string">'0.7'</span> <span class="attr">zIndex</span>=<span class="string">"-2"</span> <span class="attr">count</span>=<span class="string">"200"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>其中：</p><ul><li>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5 - count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</li></ul><p>②增加鼠标点击有爱心的动画特效</p><p><a href="https://zhuanlan.zhihu.com/p/69211731">Hexo 博客美化合集（不断更新） - 知乎 (zhihu.com)</a></p><p>还是来自这篇文章~但是爱心和烟花特效不可兼得嗷</p><p>在hexo\themes\next\source\js 下新建文件，我是使用VSC直接新建，然后保存的时候选择了.js的格式。</p><p>所以就是那个文件夹下新建love.js文件，添加以下代码：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>{<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>{c(<span class="string">".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}"</span>),o(),r()}<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>{<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)}<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>{<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>{t&amp;&amp;t(),i(e)}}<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>{<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push({<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX-<span class="number">5</span>,<span class="attr">y</span>:e.clientY-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()}),t.body.appendChild(a)}<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>{<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>{a.appendChild(t.createTextNode(e))}<span class="keyword">catch</span>(t){a.styleSheet.cssText=e}t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)}<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>{<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>}<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>{<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)}}(),n()}(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>然后在\hexo\themes\next\layout\_layout.njk文件末尾添加以下代码：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/love.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>完成！</p><p>③添加了侧边栏头像</p><p>头像一开始不知道怎么回事总是不成功，后来才发现要像素200*200的才可以，所以先找到一张图片，去了一个在线压缩图片的网站：</p><p><a href="https://www.tuhaokuai.com/jpg">JPG压缩，精确控制JPG图片的大小，长宽 (tuhaokuai.com)</a></p><p>这个微信扫码登录就可以用了</p><p>然后参考</p><p><a href="https://blog.csdn.net/nightmare_dimple/article/details/86661502?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-0&amp;spm=1001.2101.3001.4242">Hexo博客优化之Next主题美化_huangpiao-CSDN博客_hexo next</a></p><p>的方法进行头像的设置，具体代码设置如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line">  <span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line">  <span class="comment"># You can also use other linking images.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/author.jpg</span>  <span class="comment">#将我们的头像图片放置在blog/themes/next/source/images目录下，填写具体地址</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span> <span class="comment">#鼠标放在头像上时是否旋转</span></span><br><span class="line">  <span class="comment"># The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">1</span> <span class="comment">#头像放缩指数</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span> <span class="comment">#头像是否设为圆形，否则为矩形</span></span><br></pre></td></tr></tbody></table></figure><p>④配置了侧边栏链接</p><p>这个更改在主题配置文件，就是\hexo\themes\next下的config文件，使用VSC打开后，找到#social这个标签</p><figure class="highlight vim"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">socia<span class="variable">l:</span></span><br><span class="line">  GitHu<span class="variable">b:</span> http<span class="variable">s:</span>//github.<span class="keyword">com</span>/yourname || github #</span><br><span class="line">  CSDN: http<span class="variable">s:</span>//blog.csdn.net/yourname || crosshairs</span><br><span class="line">  #E-Mai<span class="variable">l:</span> mailto:yourname@gmail.<span class="keyword">com</span> || envelope</span><br><span class="line">  ...</span><br></pre></td></tr></tbody></table></figure><p>把地址替换了，把前面的#删除就可以用啦，格式为【链接名:链接地址 || 链接图标】，链接图标必须是<a href="http://fontawesome.dashgame.com/">FontAwesome</a>网站中存在的图标名。</p><p>⑤设置了文章字数和阅读时间</p><p>这个网上很多版本都说安装npm的wordcount插件，可是我安了不太好使不知道为啥。。然后用了这个新的感觉还阔以，至少能显示！</p><p><a href="https://github.com/theme-next/hexo-symbols-count-time">theme-next/hexo-symbols-count-time: Symbols count and time to read of articles for Hexo. (github.com)</a></p><p>方法我翻译一下。</p><p>就是在hexo文件夹下打开命令行or git bash一下，输入</p><figure class="highlight applescript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-<span class="built_in">count</span>-<span class="built_in">time</span></span><br></pre></td></tr></tbody></table></figure><p>然后执行，安装完之后点开hexo的config配置，键入以下代码块：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">"mins."</span></span><br></pre></td></tr></tbody></table></figure><p>有几个注意的点：</p><ul><li>awl：如果是中文设置为2，英文设置为5，俄文设置为6</li><li>wpm：中文一般设置为300，英文一般设置为275</li></ul><p>【如果是next主题】</p><p>然后进入next文件夹，打开next的config主题配置文件，插入以下代码块：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><p>这个可以在文件里检索到，不过少了一行item_text_post: true，找到位置然后把这行补上就行</p><p>后面还有个development，用命令行再Git clone一下，不知道有啥用，我一并都执行了一下（笑哭</p><p>首先进入hexo文件夹，在此文件夹下执行命令行窗口</p><figure class="highlight vim"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> hexo</span><br><span class="line"></span><br><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/theme-<span class="keyword">next</span>/hexo-symbols-<span class="built_in">count</span>-time.git node_modules/hexo-symbols-<span class="built_in">count</span>-time</span><br></pre></td></tr></tbody></table></figure><p>最后是一个test</p><figure class="highlight q"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mocha chai --<span class="built_in">save</span>-<span class="built_in">dev</span></span><br></pre></td></tr></tbody></table></figure><p>以上，今天所有的修改</p><hr><p>更改博客里的任何一个小小的点都要hexo clean-hexo g-hexo s的我。。。感到疲惫</p><p>尤其不知道怎么回事突然就GG，真的好崩溃</p><p>今天还发现了一个新问题，那就是端口被占用（后来查来查去搞明白是自己开了两个gitbash窗口其中一个没有Ctrl+c），顺便也说一下端口被占用的解决方法</p><p>有两个，一个是干脆把自己的端口名改掉，另外一个就是找出占用端口的应用然后关掉！</p><p>①修改端口名</p><p>在hexo文件中的config配置文件中打开添加一段代码</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">40401</span> <span class="comment">#任意你想修改的端口号，只要别重复之前的</span></span><br><span class="line">  <span class="attr">compress:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">header:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>②找出来占用，关掉</p><p>方法参照</p><p><a href="https://blog.csdn.net/lll921176681/article/details/76618336">如何关闭占用的端口程序_lll921176681的博客-CSDN博客_关闭端口</a></p><p>讲得非常详细！感谢大佬！</p><p>———————————–20210715再补充———————————–</p><p>做完了最终效果看了看，发现漏了一个点：两篇文章都显示了全文！翻起来很麻烦。所以加了一条缩略全文，多了个阅读更多选项，具体做法是在typora编辑器中，要断掉的地方加入一行：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--more--&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>大功告成！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天上午经历了崩溃的报错修改过程……学到的唯一一件事：如果改了主题配置文件or其他css文件夹下其他代码中的什么设置，然后出现疯狂报错的情况，直接删号重来吧（不是&lt;/p&gt;
&lt;p&gt;反正最后的解决方法就是删了主题文件重装了一遍，万事大吉了OTZ&lt;/p&gt;
&lt;p&gt;今天对博客的美化内容有：&lt;/p&gt;</summary>
    
    
    
    <category term="博客搭建" scheme="https://jinzhen-lee.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="-博客美化" scheme="https://jinzhen-lee.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
</feed>
